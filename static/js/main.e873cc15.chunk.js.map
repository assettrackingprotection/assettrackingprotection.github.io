{"version":3,"sources":["assets/images/profile_icon.jpg","services/atpApi.js","services/authService/routes.js","services/localStorageService.js","services/authService/index.js","hooks/useAuth.js","services/assetService/routes.js","services/assetService/index.js","pages/Profile.js","components/Header.js","utils/truncate.js","components/AssetCard/AssetCard.js","components/AssetEntry.js","components/LoadingSpinner.js","components/AssetList/AssetList.js","pages/HomePage.js","pages/CompanyPage.js","components/common/ContactForm.js","pages/ContactPage.js","pages/LoginPage.js","pages/AddAsset.js","components/Footer.js","pages/AssetPage.js","pages/StatsPage.js","App.js","serviceWorker.js","index.js","ATPLogo.png"],"names":["module","exports","atpApi","process","authRoutes","this","baseRoute","localStorageService","baseKey","key","data","localStorage","setItem","JSON","stringify","parse","getItem","delete","removeItem","load","save","value","authService","email","password","firstName","lastName","phone","axios","post","register","console","error","logout","login","res","accessToken","token","refreshToken","refresh","tryRefresh","get","isLoggedIn","headers","Authorization","userDetails","authHeaders","exp","jwt","decode","Date","useAuth","callback","redirectRoute","history","useHistory","useEffect","a","push","isAccessTokenExpired","checkLogin","assetRoutes","assetId","assetService","assets","id","singleAsset","name","description","image","formData","FormData","append","assetImage","patch","Profile","useState","user","setUser","setAssets","totalvalue","setTotalvalue","getAllAssets","totalprice","forEach","element","retreiveUser","retreiveAssets","Container","className","Row","class","Col","Image","src","icon","width","height","roundedCircle","title","length","type","data-toggle","role","href","Header","setLoggedIn","retrieveUser","Navbar","bg","variant","expand","Brand","as","Link","to","logo","style","Toggle","aria-controls","Collapse","Nav","Form","inline","FormControl","placeholder","Button","RightButton","onClick","truncate","originalString","limit","truncatedStr","substr","AssetCard","asset","imageUrl","linkUrl","md","lg","Card","Img","Title","Text","AssetEntry","LoadingSpinner","isLoading","children","xs","Spinner","animation","NoAssetsNotice","CardView","map","item","SpreadsheetView","AssetList","viewMode","setIsLoading","ViewModeToggle","setViewMode","handleViewModeChange","e","assetViewMode","target","InputGroup","FormLabel","FormCheck","checked","onChange","HomePage","CompanyPage","Carousel","Item","alt","thumbnail","marginTop","size","ContactForm","message","setFormData","onSubmit","payload","alert","method","htmlFor","rows","ContactPage","Map","withScriptjs","withGoogleMap","props","defaultZoom","defaultCenter","lat","lng","position","googleMapURL","loadingElement","containerElement","mapElement","sleep","ms","Promise","resolve","setTimeout","LoginForm","setPage","useForm","handleSubmit","submitData","ref","required","RegisterForm","clearError","setError","errors","pattern","validate","correct","test","Password","LoginPage","page","AddAsset","imageFileName","setImageFileName","log","createAsset","Group","controlId","Label","Control","Prepend","step","File","label","accept","custom","files","Footer","year","useMemo","getFullYear","AssetPage","useParams","setAsset","showForm","setShowForm","getSingleAsset","retreiveAsset","deleteAsset","updateAsset","window","confirm","defaultValue","StatsPage","totalValue","setTotalValue","totalPrice","Jumbotron","stats","biggestAsset","smallestAsset","longestDescription","shortestDescription","averageValue","assetRange","rangeReady","getStats","formatter","Intl","NumberFormat","currency","minimumFractionDigits","Table","striped","hover","responsive","format","Home","Assets","Page1","Page2","Page3","Contact","App","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e873cc15.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile_icon.6d691fab.jpg\";","function atpApi() {\n  const protocol = process.env.REACT_APP_API_PROTOCOL || 'http';\n  const host = process.env.REACT_APP_API_HOST || 'localhost:8000';\n\n  return `${protocol}://${host}`;\n}\n\nexport default atpApi();\n","import atpApi from '../atpApi';\n\nclass AuthRoutes {\n  get baseRoute() {\n    return `${atpApi}/auth`;\n  }\n\n  register() {\n    return `${this.baseRoute}/register`;\n  }\n\n  login() {\n    return `${this.baseRoute}/login`;\n  }\n\n  refresh() {\n    return `${this.baseRoute}/refresh`;\n  }\n\n  isLoggedIn() {\n    return `${this.baseRoute}/isLoggedIn`;\n  }\n\n  userDetails() {\n    return `${this.baseRoute}/userDetails`;\n  }\n}\n\nconst authRoutes = new AuthRoutes();\nexport default authRoutes;\n","class LocalStorageService {\n  constructor() {\n    this.baseKey = 'ATP';\n  }\n\n  save(key, data) {\n    localStorage.setItem(`${this.baseKey}.${key}`, JSON.stringify(data));\n  }\n\n  load(key) {\n    return JSON.parse(localStorage.getItem(`${this.baseKey}.${key}`));\n  }\n\n  logout() {\n    this.delete('accessToken');\n    this.delete('refreshToken');\n  }\n\n  delete(key) {\n    localStorage.removeItem(`${this.baseKey}.${key}`);\n  }\n\n  get accessToken() {\n    return this.load('accessToken');\n  }\n\n  set accessToken(data) {\n    this.save('accessToken', data);\n  }\n\n  get refreshToken() {\n    return this.load('refreshToken');\n  }\n\n  set refreshToken(data) {\n    this.save('refreshToken', data);\n  }\n\n  get assetViewMode() {\n    const data = this.load('assetViewMode');\n    if (data == null) {\n      return 'card';\n    }\n\n    return data;\n  }\n\n  set assetViewMode(value) {\n    this.save('assetViewMode', value);\n  }\n}\n\nconst localStorageService = new LocalStorageService();\nexport default localStorageService;\n","import axios from 'axios';\nimport authRoutes from './routes';\nimport localStorageService from '../localStorageService';\nimport jwt from 'jsonwebtoken';\n\nclass AuthService {\n  get accessToken() {\n    return localStorageService.accessToken;\n  }\n\n  get isAccessTokenExpired() {\n    if (this.accessToken) {\n      const { exp } = jwt.decode(this.accessToken);\n      const expirationTime = new Date(exp * 1000);\n      const now = new Date();\n      return expirationTime - now <= 0;\n    }\n\n    return true;\n  }\n\n  get refreshToken() {\n    return localStorageService.refreshToken;\n  }\n\n  set accessToken(value) {\n    localStorageService.accessToken = value;\n  }\n\n  set refreshToken(value) {\n    localStorageService.refreshToken = value;\n  }\n\n  get authHeaders() {\n    return { Authorization: `Bearer ${this.accessToken}` };\n  }\n\n  async register(email, password, firstName, lastName, phone) {\n    try {\n      await axios.post(authRoutes.register(), {\n        email,\n        password,\n        firstName,\n        lastName,\n        phone\n      });\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n\n  async logout() {\n    localStorageService.logout();\n  }\n\n  async login(email, password) {\n    try {\n      const res = await axios.post(authRoutes.login(), {\n        email,\n        password\n      });\n      this.accessToken = res.data.token;\n      this.refreshToken = res.data.refresh;\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n\n  async refresh() {\n    try {\n      const res = await axios.post(authRoutes.refresh(), {\n        refresh: this.refreshToken\n      });\n      this.accessToken = res.data.token;\n      this.refreshToken = res.data.refresh;\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n\n  async isLoggedIn(tryRefresh = true) {\n    try {\n      await axios.get(authRoutes.isLoggedIn(), {\n        headers: {\n          Authorization: `Bearer ${this.accessToken}`\n        }\n      });\n      return true;\n    } catch (error) {\n      if (tryRefresh) {\n        const refreshSucceded = await this.refresh();\n        if (refreshSucceded) {\n          return await this.isLoggedIn(false);\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    }\n  }\n\n  async userDetails() {\n    try {\n      const res = await axios.get(authRoutes.userDetails(), {\n        headers: this.authHeaders\n      });\n      return {\n        email: res.data.email,\n        firstName: res.data.firstName,\n        lastName: res.data.lastName,\n        phone: res.data.phone\n      };\n    } catch (error) {\n      return null;\n    }\n  }\n}\n\nconst authService = new AuthService();\nexport default authService;\n","import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport authService from '../services/authService';\n\nfunction useAuth(callback, redirectRoute = '/') {\n  const history = useHistory();\n\n  useEffect(() => {\n    async function checkLogin() {\n      const isLoggedIn = await authService.isLoggedIn();\n      if (isLoggedIn) {\n        callback();\n      } else {\n        history.push(redirectRoute);\n      }\n    }\n    if (!authService.isAccessTokenExpired) {\n      callback();\n    } else {\n      checkLogin();\n    }\n  }, []);\n}\n\nexport default useAuth;\n","import atpApi from '../atpApi';\n\nclass AssetRoutes {\n  get baseRoute() {\n    return `${atpApi}/asset`;\n  }\n\n  singleAsset(assetId) {\n    return `${this.baseRoute}/${assetId}`;\n  }\n\n  assetImage(assetId) {\n    return `${this.baseRoute}/${assetId}/image`;\n  }\n}\n\nconst assetRoutes = new AssetRoutes();\nexport default assetRoutes;\n","import axios from 'axios';\nimport assetRoutes from './routes';\nimport authService from '../authService';\n\nclass AssetService {\n  async getAllAssets() {\n    try {\n      const res = await axios.get(assetRoutes.baseRoute, { headers: authService.authHeaders });\n      return res.data.assets;\n    } catch (error) {\n      console.error(error);\n      return null;\n    }\n  }\n\n  async getSingleAsset(id) {\n    try {\n      const res = await axios.get(assetRoutes.singleAsset(id), {\n        headers: authService.authHeaders\n      });\n      return res.data;\n    } catch (error) {\n      console.error(error);\n      return null;\n    }\n  }\n\n  async createAsset(name, value, description, image) {\n    try {\n      const res = await axios.post(\n        assetRoutes.baseRoute,\n        {\n          name,\n          value,\n          description\n        },\n        {\n          headers: authService.authHeaders\n        }\n      );\n      const id = res.data.id;\n      const formData = new FormData();\n      formData.append('image', image);\n      await axios.post(assetRoutes.assetImage(id), formData, { headers: authService.authHeaders });\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n\n  async updateAsset(id, name = null, value = null, description = null) {\n    try {\n      await axios.patch(\n        assetRoutes.singleAsset(id),\n        {\n          name,\n          value,\n          description\n        },\n        {\n          headers: authService.authHeaders\n        }\n      );\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n\n  async deleteAsset(id) {\n    try {\n      await axios.delete(assetRoutes.singleAsset(id), { headers: authService.authHeaders });\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n}\n\nconst assetService = new AssetService();\nexport default assetService;\n","import React, { useState } from 'react';\nimport { Container, Image, Row, Col } from 'react-bootstrap';\nimport icon from '../assets/images/profile_icon.jpg';\nimport authService from '../services/authService';\nimport useAuth from '../hooks/useAuth';\nimport assetService from '../services/assetService';\nimport '../styles/Profile.css';\n\nfunction Profile() {\n    const [user, setUser] = useState([]);\n    const [assets, setAssets] = useState([]);\n    const [totalvalue, setTotalvalue] = useState([]);\n\n    useAuth(() => {\n      const retreiveAssets = async () => {\n        const data = await assetService.getAllAssets();\n        var totalprice = 0;\n        data.forEach(element => {\n            totalprice += element.value;\n        });\n        setTotalvalue(totalprice);\n        setAssets(data);\n        const retreiveUser = async () => {\n          const data = await authService.userDetails();\n          setUser(data);\n        };\n        retreiveUser();\n      };\n      retreiveAssets();\n      const retreiveUser = async () => {\n        const data = await authService.userDetails();\n        setUser(data);\n      };\n      retreiveUser();\n    });\n\n    return (\n        <Container>\n          <br></br>\n          <h1 className=\"text-center\">My Profile</h1>\n          <Row>\n          <div class=\"col-xs-12 col-sm-6 col-md-6\">\n            <div class=\"well well-sm\">\n              <br></br>\n              <br></br>\n              <br></br>\n              <br></br>\n                <Row>\n                    <Col>\n                        {/* We could add ability to edit this picture as well */}\n                      <Image src={icon} width=\"200\" height=\"auto\" roundedCircle></Image>\n                    </Col>\n                    <Col>\n                        <h4>{user.firstName} {user.lastName}</h4>\n                        {/* We can add location if we want and put it here */}\n                        <small><cite title=\"San Francisco, USA\">San Francisco, USA <i class=\"glyphicon glyphicon-map-marker\">\n                        </i></cite></small>\n                        <p>\n                            <i class=\"glyphicon glyphicon-envelope\"></i>{user.email}\n                            <br />\n                            <i class=\"glyphicon glyphicon-gift\"></i>{user.phone}\n                            <br />\n                            <br />\n                            <i class=\"glyphicon glyphicon-gift\"></i>Assets value: ${totalvalue}\n                            <br />\n                            <i class=\"glyphicon glyphicon-gift\"></i># of assets: {assets.length}</p>\n\n                            {/* We could add links to other pages they have here if we want\n                                or even make this an edit button if we want, just don't know if we need that yet */}\n                        <div class=\"btn-group\">\n                            <button type=\"button\" class=\"btn btn-primary\">\n                                Social</button>\n                            <button type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\">\n                                <span class=\"caret\"></span><span class=\"sr-only\">Social</span>\n                            </button>\n                            <ul class=\"dropdown-menu\" role=\"menu\">\n                                <li><a href=\"#\">Twitter</a></li>\n                                <li><a href=\"https://plus.google.com/+Jquery2dotnet/posts\">Google +</a></li>\n                                <li><a href=\"https://www.facebook.com/jquery2dotnet\">Facebook</a></li>\n                                <li class=\"divider\"></li>\n                                <li><a href=\"#\">Github</a></li>\n                            </ul>\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        </div>\n          </Row>\n        </Container>\n    );\n}\n\nexport default Profile;\n","import React, { useState, useEffect } from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\nimport { Form, Button, FormControl, Nav, NavDropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport authService from \"../services/authService\";\nimport { useHistory } from 'react-router-dom';\nimport Profile from '../pages/Profile';\nimport logo from '../ATPLogo.png';\n\nfunction Header() {\n\n  const [isLoggedIn, setLoggedIn] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    const retrieveUser = async () => {\n      const data = await authService.isLoggedIn();\n      setLoggedIn(data);\n    };\n    retrieveUser();\n  });\n\n  function logout() {\n        authService.logout();\n        history.push('/');\n    }\n\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n            <div className=\"container\">\n                <Navbar.Brand as={Link} to=\"/\"><img className=\"logo\" src={logo} style={{ width: 45 }} /></Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n                        <Nav.Link as={Link} to=\"/assets\">Assets</Nav.Link>\n                        <Nav.Link as={Link} to=\"/contact\">Contact</Nav.Link>\n                        <Profile />\n                        <Stats />\n                    </Nav>\n                    <Form inline>\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                        <Button variant=\"outline-success\">Search</Button>\n                    </Form>\n                    <RightButton />\n                </Navbar.Collapse>\n            </div>\n        </Navbar>\n    );\n\n    function RightButton() {\n        if(isLoggedIn) {\n            return <Button className=\"ml-2\" variant=\"outline-primary\" onClick={ () => {logout()}}>Logout</Button>\n        } else {\n            return <Button className=\"ml-2\" variant=\"outline-primary\" as={Link} to=\"/login\">Login</Button>\n        }\n    }\n\n  return (\n    <Navbar bg='dark' variant='dark' expand='lg'>\n      <div className='container'>\n        <Navbar.Brand as={Link} to='/'>\n          ATP\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\n        <Navbar.Collapse id='basic-navbar-nav'>\n          <Nav className='mr-auto'>\n            <Nav.Link as={Link} to='/'>\n              Home\n            </Nav.Link>\n            <Nav.Link as={Link} to='/assets'>\n              Assets\n            </Nav.Link>\n            <Nav.Link as={Link} to='/contact'>\n                Contact\n            </Nav.Link>\n            <Nav.Link as={Link} to='/statistics'>\n                Stats\n            </Nav.Link>\n          </Nav>\n          <Form inline>\n            <FormControl type='text' placeholder='Search' className='mr-sm-2' />\n            <Button variant='outline-success'>Search</Button>\n          </Form>\n          <RightButton />\n        </Navbar.Collapse>\n      </div>\n    </Navbar>\n  );\n\n\n    function Profile() {\n        if(isLoggedIn) {\n            return <Nav.Link as={Link} to=\"/profile\">Profile</Nav.Link>\n        }\n        return null;\n    }\n\n    function Stats() {\n        if (isLoggedIn) {\n            return <Nav.Link as={Link} to=\"/statistics\">Stats</Nav.Link>\n        }\n        return null;\n    }\n}\n\nexport default Header;\n","function truncate(originalString, limit) {\n  let truncatedStr = originalString.substr(0, limit);\n\n  if (truncatedStr.length < originalString.length) {\n    truncatedStr += '...';\n  }\n\n  return truncatedStr;\n}\n\nexport default truncate;\n","import React from 'react';\nimport { Card, Button, Col } from 'react-bootstrap';\nimport truncate from '../../utils/truncate';\nimport '../../styles/AssetCard.css';\nimport { Link } from 'react-router-dom';\n\nfunction AssetCard({ asset }) {\n  const description = asset.description\n    ? truncate(asset.description, 40)\n    : 'No description provided';\n\n  const imageUrl = asset.imageUrl\n    ? asset.imageUrl\n    : 'https://bhmlib.org/wp-content/themes/cosimo-pro/images/no-image-box.png';\n\n  const linkUrl = \"/asset/\" + asset.id;\n\n  return (\n    <Col md='6' lg='4' className='asset-card'>\n      <Card>\n        <Card.Img src={imageUrl} width='320' height='170' />\n        <Card.Title>{`${asset.name}: $${asset.value}`}</Card.Title>\n        <Card.Text>{description}</Card.Text>\n        <Button as={Link} to={linkUrl}>\n          View Details\n        </Button>\n      </Card>\n    </Col>\n  );\n}\n\nexport default AssetCard;\n","import React from 'react';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport truncate from '../utils/truncate';\nimport '../styles/AssetEntry.css';\nimport { Link } from 'react-router-dom';\n\nfunction AssetEntry({ asset }) {\n  const description = asset.description\n    ? truncate(asset.description, 33)\n    : 'No description provided';\n\n  const linkUrl = \"/asset/\" + asset.id;\n\n  return (\n    <div className='asset-entry'>\n      <Col>{asset.name}</Col>\n      <Col>{`$${asset.value}`}</Col>\n      <Col>{description}</Col>\n      <Col>\n        <Button as={Link} to={linkUrl} variant='primary'>View Details</Button>\n      </Col>\n    </div>\n  );\n}\n\nexport default AssetEntry;\n","import React from 'react';\nimport { Spinner, Row, Col } from 'react-bootstrap';\nimport '../styles/Spinner.css';\n\n/**\n *\n * @param {isLoading} isLoading Whether the component should show a loading spinner\n * @param {children} children The components to render if the data is loaded\n */\nfunction LoadingSpinner({ isLoading, children }) {\n  if (isLoading) {\n    return (\n      <Row>\n        <Col xs='12' className='d-flex justify-content-center'>\n          <Spinner className='loading-spinner' animation='border' variant='primary' role='status' />\n        </Col>\n      </Row>\n    );\n  } else {\n    return <>{children}</>;\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { useState } from 'react';\nimport AssetCard from '../AssetCard';\nimport AssetEntry from '../AssetEntry';\nimport { Row, Col } from 'react-bootstrap';\nimport useAuth from '../../hooks/useAuth';\nimport assetService from '../../services/assetService';\nimport LoadingSpinner from '../LoadingSpinner';\nimport '../../styles/AssetList.css';\n\nfunction NoAssetsNotice() {\n  return (\n    <Row>\n      <Col xs='12' className='no-assets-notice'>\n        <h3>You have not added any assets.</h3>\n      </Col>\n    </Row>\n  );\n}\n\nfunction CardView({ assets }) {\n  if (assets.length > 0) {\n    return (\n      <Row>\n        {assets.map(item => {\n          return <AssetCard key={item.id} asset={item} />;\n        })}\n      </Row>\n    );\n  } else {\n    return <NoAssetsNotice />;\n  }\n}\n\nfunction SpreadsheetView({ assets }) {\n  if (assets.length > 0) {\n    return (\n      <div className='asset-spreadsheet'>\n        <div className='asset-spreadsheet-header'>\n          <Col>Name</Col>\n          <Col>Value</Col>\n          <Col>Description</Col>\n          <Col>Details</Col>\n        </div>\n        {assets.map(item => {\n          return <AssetEntry key={item.id} asset={item} />;\n        })}\n      </div>\n    );\n  } else {\n    return <NoAssetsNotice />;\n  }\n}\n\nfunction AssetList({ viewMode }) {\n  const [assets, setAssets] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useAuth(() => {\n    const retreiveAssets = async () => {\n      const data = await assetService.getAllAssets();\n      setAssets(data);\n      setIsLoading(false);\n    };\n    retreiveAssets();\n  });\n\n  return (\n    <LoadingSpinner isLoading={isLoading}>\n      {viewMode === 'spreadsheet' ? (\n        <SpreadsheetView assets={assets} />\n      ) : (\n        <CardView assets={assets} />\n      )}\n    </LoadingSpinner>\n  );\n}\n\nexport default AssetList;\n","import React, { useState } from 'react';\nimport AssetList from '../components/AssetList';\nimport { Container, Row, Col, Button, FormCheck, FormLabel, InputGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport localStorageService from '../services/localStorageService';\nimport '../styles/AssetPage.css';\n\nfunction ViewModeToggle({ viewMode, setViewMode }) {\n  const handleViewModeChange = e => {\n    localStorageService.assetViewMode = e.target.value;\n    setViewMode(e.target.value);\n  };\n\n  return (\n    <Col>\n      <InputGroup>\n        <FormLabel className='view-mode-toggle'>\n          <FormCheck\n            type='radio'\n            value='card'\n            checked={viewMode === 'card'}\n            onChange={handleViewModeChange}\n          />\n          Card View\n        </FormLabel>\n        <FormLabel className='view-mode-toggle'>\n          <FormCheck\n            type='radio'\n            value='spreadsheet'\n            checked={viewMode === 'spreadsheet'}\n            onChange={handleViewModeChange}\n          />\n          Spreadsheet View\n        </FormLabel>\n      </InputGroup>\n    </Col>\n  );\n}\n\nfunction HomePage() {\n  const [viewMode, setViewMode] = useState(localStorageService.assetViewMode);\n\n  return (\n    <div>\n      <Container>\n        <br></br>\n        <Row>\n          <Col>\n            <h1>Your Assets:</h1>\n          </Col>\n          <Col>\n            <Button variant='success btn-lg float-right' as={Link} to='/add_asset'>\n              New\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <ViewModeToggle viewMode={viewMode} setViewMode={setViewMode} />\n        </Row>\n        <AssetList viewMode={viewMode} />\n      </Container>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport Image from 'react-bootstrap/Image'\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { FaEnvelope, FaGithub, FaPhone } from 'react-icons/fa';\n\nfunction CompanyPage() {\n    return (\n        <div className=\"container\">\n            <br></br>\n            <h1>ATP - Asset Tracking & Protection</h1>\n            <br></br>\n            <Carousel>\n                <Carousel.Item>\n                    <img\n                    className=\"d-block w-100\"\n                    src=\"https://www.bunchandbrocklaw.com/wp-content/uploads/2018/12/chapter-7-exemptions-1072x425.jpg\"\n                    alt=\"First slide\"\n                    />\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img\n                    className=\"d-block w-100\"\n                    src=\"https://oregonshar.files.wordpress.com/2014/04/1404-mustangs_088-line-of-pony-cars.jpg?w=848\"\n                    alt=\"Second slide\"\n                    />\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img\n                    className=\"d-block w-100\"\n                    src=\"https://images.macrumors.com/t/0dAUvf2F-YHP97tMDCDAnEwMSok=/800x0/article-new/2018/12/appleproductlineup-800x313.jpg\"\n                    alt=\"Third slide\"\n                    />\n                </Carousel.Item>\n            </Carousel>\n            <br></br>\n            <h3>About ATP</h3>\n            <br></br>\n            <p>We should come up with a paragraph here about the company's history and what our slogan is or something like that.</p>\n            <br></br>\n            <h3>ATP Team</h3>\n            <Row>\n                <Col xs={6} md={4}>\n                <Image src=\"https://static.independent.co.uk/s3fs-public/thumbnails/image/2015/06/06/15/Chris-Pratt.jpg?w968h681\" thumbnail />\n                <h4>Tyler Green</h4>\n                <br></br>\n                <p>about Tyler</p>\n                </Col>\n                <Col xs={6} md={4}>\n                <Image src=\"https://s.hdnux.com/photos/51/23/24/10827008/3/920x920.jpg\" thumbnail />\n                <h4>Ethan Watson</h4>\n                <br></br>\n                <p>about Ethan</p>\n                </Col>\n                <Col xs={6} md={4} className=\"shadow-lg\">\n                    <Image style={{ marginTop: 12 }} src=\"https://www.tubefilter.com/wp-content/uploads/2019/11/dobrik-people.jpg\" thumbnail />\n                    <h3 className=\"text-center\">Jason Boyd</h3>\n                    <div className=\"p-3\">\n                        <Row>\n                            <Col className=\"text-right\"><FaEnvelope size={32} /></Col>\n                            <Col xs={8} className=\"text-left\"><p className=\"lead\"><a href=\"mailto:jasonboyd99@gmail.com?\">Email Jason</a></p></Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"text-right\"><FaGithub size={32} /></Col>\n                            <Col xs={8} className=\"text-left\"><p className=\"lead\"><a target=\"_blank\" href=\"https://github.com/itsjaboyd\">Jason's Github</a></p></Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"text-right\"><FaPhone size={32} /></Col>\n                            <Col xs={8} className=\"text-left\"><p className=\"lead\">801 - 529 - 0853</p></Col>\n                        </Row>\n                    </div>\n                    <h4 className=\"p-2\">About Jason</h4>\n                    <hr />\n                    <p>\n                        Jason is currently a senior studying computer science at Utah State Univeristy in Logan, Utah. His interests include mobile application development,\n                        producing music, and exploring the outdoors.\n                    </p>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default CompanyPage;","import React, { useState } from 'react';\n\nfunction ContactForm() {\n\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        message: '',\n    });\n\n    function handleSubmit(e) {\n        var payload = { formData }.formData.name + \"\\n\" +\n            { formData }.formData.email + \"\\n\" +\n            { formData }.formData.message;\n        alert(\"STATE DATA:\\n\" + payload);\n    };\n\n    return (\n        <form id=\"contact-form\" onSubmit={handleSubmit} method=\"POST\">\n            <div className=\"form-group\">\n                <label htmlFor=\"name\">Name</label>\n                <input type=\"text\" className=\"form-control\" value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                <input type=\"email\" className=\"form-control\" value={formData.email} onChange={(e) => setFormData({ ...formData, email: e.target.value })} />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"message\">Message</label>\n                <textarea className=\"form-control\" rows=\"5\" value={formData.message} onChange={(e) => setFormData({ ...formData, message: e.target.value })} />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n        </form>\n    );\n}\n\nexport default ContactForm;","import React, { useState } from 'react';\nimport { Container, Row, Col, Image } from 'react-bootstrap';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport ContactForm from '../components/common/ContactForm';\nimport { FaEnvelope, FaGithub, FaPhone } from 'react-icons/fa';\nimport logo from '../ATPLogo.png';\nimport '../styles/ContactPage.css';\n\nfunction ContactPage() {\n  const Map = withScriptjs(\n    withGoogleMap(props => (\n      <GoogleMap defaultZoom={10} defaultCenter={{ lat: 41.7355556, lng: -111.8336111 }}>\n        <Marker position={{ lat: 41.7355556, lng: -111.8336111 }} />\n      </GoogleMap>\n    ))\n  );\n\n  return (\n      <Container>\n        <div className='jumbotron text-center background shadow'>\n          <h1 className='display-2'>Contact Us!</h1>\n          <div>\n            <p className='lead description'>\n              Although we may not be a fully fledged service yet, we value your feedback and any\n              questions you may have!\n            </p>\n          </div>\n        </div>\n        <Row>\n          <Col className='px-5'>\n            <ContactForm />\n          </Col>\n          <Col className='text-center'>\n            <h2>Our Location</h2>\n            <p>We are currently based in Logan, Utah.</p>\n            <div className='shadow'>\n              <Map\n                googleMapURL='https://maps.googleapis.com/maps/api/js?key=AIzaSyBOBXN_Ul3kEatVYTHOUzf_-Zr1WBBNljA&libraries=geometry,drawing,places'\n                loadingElement={<div style={{ height: `100%` }} />}\n                containerElement={<div style={{ height: `320px` }} />}\n                mapElement={<div style={{ height: `100%` }} />}\n              />\n            </div>\n          </Col>\n        </Row>\n      </Container>\n  );\n}\n\nexport default ContactPage;\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/LoginPage.css';\nimport { Row, Col } from 'react-bootstrap';\nimport authService from '../services/authService';\nimport LoadingSpinner from '../components/LoadingSpinner';\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nfunction LoginForm({ setPage }) {\n  const { register, handleSubmit } = useForm();\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n  const submitData = async data => {\n    setIsLoading(true);\n    const success = await authService.login(data.email, data.password);\n    if (success) {\n      // redirect to asset page on successful login\n      history.push('/assets');\n    } else {\n      alert('login error');\n    }\n    setIsLoading(false);\n  };\n  return (\n    <LoadingSpinner isLoading={isLoading}>\n      <div className='login-page'>\n        <div className='text-center'>\n          <h1 className='display-2'>ATP</h1>\n          <h4>Please login</h4>\n        </div>\n        <form className='login-form' onSubmit={handleSubmit(submitData)}>\n          <div className='form-group'>\n            <label htmlFor='email'>Email</label>\n            <input\n              className='form-control form-control-lg'\n              name='email'\n              placeholder='example@email.com'\n              type='email'\n              ref={register({ required: true })}\n            />\n\n            <label htmlFor='password'>Password</label>\n            <input\n              className='form-control form-control-lg'\n              name='password'\n              placeholder='password'\n              type='password'\n              ref={register({ required: true })}\n            />\n          </div>\n          <div className='form-group text-center'>\n            <input type='checkbox' name='remember' ref={register} />\n            <label className='mx-2' htmlFor='remember'>\n              Remember Me\n            </label>\n          </div>\n          <div>\n            <Row>\n              <Col>\n                <button\n                  className='btn btn-outline-success btn-block'\n                  type='submit'\n                  onClick={() => {\n                    setPage(false);\n                  }}\n                >\n                  Register\n                </button>\n              </Col>\n              <Col>\n                <button className='btn btn-outline-primary btn-block' type='submit'>\n                  Login\n                </button>\n              </Col>\n            </Row>\n          </div>\n        </form>\n      </div>\n    </LoadingSpinner>\n  );\n}\n\nfunction RegisterForm() {\n  const { register, handleSubmit, clearError, setError, errors } = useForm();\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n  const submitData = async data => {\n    setIsLoading(true);\n    let success = await authService.register(\n      data.email,\n      data.password,\n      data.firstName,\n      data.lastName,\n      data.phone\n    );\n    if (success) {\n      success = await authService.login(data.email, data.password);\n      if (success) {\n        history.push('/assets');\n      } else {\n        alert('login error');\n      }\n    } else {\n      alert('register error');\n    }\n    setIsLoading(false);\n  };\n  return (\n    <LoadingSpinner isLoading={isLoading}>\n      <div className='login-page'>\n        <div className='text-center'>\n          <h1 className='display-2'>ATP</h1>\n          <h4>Registration</h4>\n        </div>\n        <div>\n          <form className='register-form' onSubmit={handleSubmit(submitData)}>\n            <div className='form-group'>\n              <Row>\n                <Col>\n                  <label htmlFor='firstName'>First Name</label>\n                  <input\n                    className='form-control'\n                    type='text'\n                    placeholder='First Name'\n                    name='firstName'\n                    ref={register({ required: true })}\n                  />\n                </Col>\n                <Col>\n                  <label htmlFor='lastName'>Last Name</label>\n                  <input\n                    className='form-control'\n                    type='text'\n                    placeholder='Last Name'\n                    name='lastName'\n                    ref={register({ required: true })}\n                  />\n                </Col>\n              </Row>\n              <label htmlFor='email'>Email Address</label>\n              <input\n                className='form-control'\n                type='email'\n                placeholder='example@email.com'\n                name='email'\n                ref={register({ required: true })}\n              />\n              <label htmlFor='phone'>Phone Number</label>\n              <input\n                className='form-control'\n                type='tel'\n                placeholder='123-456-7890'\n                name='phone'\n                pattern='[0-9]{3}-[0-9]{3}-[0-9]{4}'\n                ref={register}\n              />\n              <Row>\n                <Col>\n                  <label htmlFor='password'>New Password</label>\n                  <input\n                    className='form-control'\n                    type='password'\n                    placeholder='Password'\n                    name='password'\n                    ref={register({\n                      required: true,\n                      validate: {\n                        correct: value =>\n                          /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/.test(\n                            value\n                          ) === true\n                      }\n                    })}\n                    onChange={async e => {\n                      const value = e.target.value;\n                      await sleep(1000);\n                      if (\n                        /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/.test(value)\n                      ) {\n                        clearError('Password');\n                      } else {\n                        setError(\n                          'Password',\n                          'notMatch',\n                          'Password must be 8 characters long, contain one digit, upper, lower and special case character.'\n                        );\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <div className='text-center'>\n                {errors.Password && <p className='error-message'>{errors.Password.message}</p>}\n              </div>\n              <button className='btn btn-outline-success btn-block my-4' type='submit'>\n                Register\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </LoadingSpinner>\n  );\n}\n\nfunction LoginPage() {\n  const [page, setPage] = useState(true);\n\n  if (page) {\n    return <LoginForm setPage={setPage} />;\n  } else {\n    return <RegisterForm />;\n  }\n}\n\nexport default LoginPage;\n","import React, { useState } from 'react';\nimport { Container, Button, InputGroup } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport useAuth from '../hooks/useAuth';\nimport assetService from '../services/assetService';\n\nfunction AddAsset() {\n  const history = useHistory();\n  const { handleSubmit, register } = useForm();\n  const [isLoading, setIsLoading] = useState(false);\n  const [imageFileName, setImageFileName] = useState(null);\n\n  useAuth(() => {});\n\n  const onSubmit = async data => {\n    setIsLoading(true);\n    console.log(data.image);\n    const success = await assetService.createAsset(\n      data.name,\n      data.value,\n      data.description,\n      data.image[0]\n    );\n    if (success) {\n      history.push('/assets');\n    } else {\n      console.error('Error creating asset');\n    }\n    setImageFileName(null);\n    setIsLoading(false);\n  };\n\n  return (\n    <LoadingSpinner isLoading={isLoading}>\n      <Container>\n        <br></br>\n        <h1>Add Asset</h1>\n        <br></br>\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <Form.Group controlId='formGroupName'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type='name'\n              name='name'\n              placeholder='Enter name'\n              ref={register({ required: true })}\n            />\n          </Form.Group>\n          <Form.Group controlId='formGroupPrice'>\n            <Form.Label>Price</Form.Label>\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text id='inputGroupPrepend'>$</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                type='number'\n                step='any'\n                name='value'\n                placeholder='Enter price'\n                ref={register({ required: true })}\n              />\n            </InputGroup>\n          </Form.Group>\n          <Form.Group controlId='formGroupDescription'>\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              type='description'\n              placeholder='Enter description'\n              name='description'\n              ref={register}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Image (optional)</Form.Label>\n            <Form.File\n              id='custom-file'\n              label={imageFileName ? imageFileName : 'File upload'}\n              name='image'\n              accept='image/png, image/jpeg'\n              ref={register}\n              custom\n              onChange={e => setImageFileName(e.target.files[0].name)}\n            />\n          </Form.Group>\n          <Button variant='success' type='submit'>\n            Create\n          </Button>\n        </Form>\n      </Container>\n    </LoadingSpinner>\n  );\n}\n\nexport default AddAsset;\n","import React, { useMemo } from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport '../styles/Footer.css';\nimport logo from '../ATPLogo.png';\n\nfunction Footer() {\n  const year = useMemo(() => new Date().getFullYear(), []);\n\n  return (\n    <footer className='global-footer bg-dark'>\n      <Container>\n        <Row>\n          <Col>\n            <span className='text-white'>\n              &copy; {year}\n              <img className=\"logo mx-3\" src={logo} style={{ width: 40 }} />\n              Asset Tracking &amp; Protection\n            </span>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import { useParams, useHistory } from \"react-router-dom\";\nimport React, { useState } from 'react';\nimport assetService from '../services/assetService';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport useAuth from '../hooks/useAuth';\nimport { Container, Image, Button, InputGroup } from \"react-bootstrap\";\nimport Form from 'react-bootstrap/Form';\nimport { useForm } from 'react-hook-form';\n\n\nfunction AssetPage() {\n\n    let { id } = useParams();\n    const history = useHistory();\n    const [asset, setAsset] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [showForm, setShowForm] = useState(false);\n    const { handleSubmit, register } = useForm();\n    // const [imageFileName, setImageFileName] = useState(null);\n\n    useAuth(() => {\n        const retreiveAsset = async () => {\n          const data = await assetService.getSingleAsset(id);\n          setAsset(data);\n          setIsLoading(false);\n        };\n        retreiveAsset();\n      });\n\n    const imageUrl = asset.imageUrl\n        ? asset.imageUrl\n        : 'https://bhmlib.org/wp-content/themes/cosimo-pro/images/no-image-box.png';\n\n    async function deleteAsset() {\n        const deleted = await assetService.deleteAsset(id);\n        if(deleted) {\n            history.push('/assets');\n        } else {\n            alert(\"Error Deleting Asset\");\n        }\n      }\n\n    function openCloseForm() {\n        if (showForm) {\n            setShowForm(false);\n        } else {\n            setShowForm(true);\n        }\n      }\n\n    const onSubmit = async data => {\n        setIsLoading(true);\n        const success = await assetService.updateAsset(\n          id,\n          data.name,\n          data.value,\n          data.description\n        );\n        if (success) {\n          history.push('/assets');\n        } else {\n          console.error('Error creating asset');\n        }\n        setIsLoading(false);\n      };\n\n    const EditForm = () => (\n        <div>\n        <br></br>\n        <h1>Edit Asset</h1>\n        <Form onSubmit={handleSubmit(onSubmit)}>\n        <Form.Group controlId='formGroupName'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type='name'\n              defaultValue={asset.name}\n              name='name'\n              placeholder='Enter name'\n              ref={register({ required: true })}\n            />\n          </Form.Group>\n          <Form.Group controlId='formGroupPrice'>\n            <Form.Label>Price</Form.Label>\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text id='inputGroupPrepend'>$</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                type='number'\n                defaultValue={asset.value}\n                step='any'\n                name='value'\n                placeholder='Enter price'\n                ref={register({ required: true })}\n              />\n            </InputGroup>\n          </Form.Group>\n          <Form.Group controlId='formGroupDescription'>\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              type='description'\n              defaultValue={asset.description}\n              placeholder='Enter description'\n              name='description'\n              ref={register}\n            />\n          </Form.Group>\n          {/* This can be used in the future to edit image */}\n          {/* <Form.Group>\n            <Form.Label>Image (optional)</Form.Label>\n            <Form.File\n              id='custom-file'\n              label={imageFileName ? imageFileName : 'File upload'}\n              name='image'\n              accept='image/png, image/jpeg'\n              ref={register}\n              custom\n              onChange={e => setImageFileName(e.target.files[0].name)}\n            />\n          </Form.Group> */}\n          <Button variant='success' type='submit'>\n            Submit\n          </Button>\n        </Form>\n        </div>\n    );\n\n    return (\n        <LoadingSpinner isLoading={isLoading}>\n            <Container>\n                <br></br>\n                <h1>Edit Asset Page</h1>\n                <br></br>\n                <h2>{asset.name}</h2>\n                <Image src={imageUrl} width='auto' height='250'></Image>\n                <br></br>\n                <br></br>\n                <h5>Value: ${asset.value}</h5>\n                <h5>Description:</h5>\n                <p>{asset.description}</p>\n                <Button className=\"mr-2\" onClick={() => openCloseForm()}>Edit</Button>\n                <Button className=\"btn-danger\" onClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteAsset() } }>Delete</Button>\n                { showForm ? <EditForm /> : null }\n            </Container>\n        </LoadingSpinner>\n    );\n}\n\nexport default AssetPage;","import React, { useState } from 'react';\nimport assetService from '../services/assetService';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport useAuth from '../hooks/useAuth';\nimport { Container, Button, Table, Row, Jumbotron } from \"react-bootstrap\";\nimport AssetCard from '../components/AssetCard/AssetCard';\nimport { Link } from 'react-router-dom';\nimport '../styles/StatsPage.css';\n\n\nfunction StatsPage() {\n    const [assets, setAssets] = useState([]);\n    const [totalValue, setTotalValue] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useAuth(() => {\n        const retreiveAssets = async () => {\n            const data = await assetService.getAllAssets();\n            var totalPrice = 0;\n            data.forEach(element => {\n                totalPrice += element.value;\n            });\n            setTotalValue(totalPrice);\n            setAssets(data);\n            setIsLoading(false);\n        };\n        retreiveAssets();\n    });\n\n    if (assets.length === 0) {\n        return (\n            <Container>\n            <Jumbotron className=\"text-center\">\n                <h3 className=\"mt-5\">You have not added any assets.</h3>\n                <p className=\"lead mx-5\">\n                        In order to display any statistics regarding your assets, you must \n                        have at least one asset recorded. You can add a new asset by navigating\n                        to the assets page, or by clicking the button below.\n                </p>\n                <Button variant='info btn-lg' as={Link} to='/assets'>\n                    Assets\n                </Button>\n            </Jumbotron>\n            </Container>\n        );\n    }\n\n    const stats = getStats({ assets });\n    console.log({ assets });\n    console.log(stats);\n\n    const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 2\n    });\n\n    return (\n        <LoadingSpinner isLoading={isLoading}>\n            <Container>\n                <br></br>\n                <h1>Statistics</h1>\n                <p className=\"lead\">\n                    Here you will find useful information about your asset list.\n                </p>\n\n                <Table striped hover responsive>\n                    <tbody>\n                        <tr>\n                            <td>Total Assets</td>\n                            <td>{assets.length}</td>\n                        </tr>\n                        <tr>\n                            <td>Total Worth</td>\n                            <td className=\"money\">{formatter.format(totalValue)}</td>\n                        </tr>\n                        <tr>\n                            <td>Average Asset Worth</td>\n                            <td className=\"money\">{formatter.format(stats.averageValue)}</td>\n                        </tr>\n                        <tr>\n                            <td>Value Range</td>\n                            <td className=\"money\">{formatter.format(stats.assetRange)}</td>\n                        </tr>\n                    </tbody>\n                </Table>\n\n                <h4 className=\"mt-4\">Largest & Smallest Assets</h4>\n                <Row>\n                    <AssetCard asset={stats.biggestAsset} />\n                    <AssetCard asset={stats.smallestAsset} /> \n                </Row>\n\n                <h4 className=\"mt-4\">Longest & Shortest Descriptions</h4>\n                <Row>\n                    <AssetCard asset={stats.longestDescription} />\n                    <AssetCard asset={stats.shortestDescription} />\n                </Row>\n\n                <h4 className=\"mt-4\">Other useful statistics</h4>\n\n            </Container>\n        </LoadingSpinner>\n    );\n}\n\nfunction getStats({ assets }) {\n    var averageValue = 0;\n    var assetRange = 0;\n    var biggestAsset, smallestAsset, longestDescription, shortestDescription;\n    var rangeReady = false;\n\n    assets.forEach(asset => {\n        averageValue += asset.value;\n\n        if (!biggestAsset) {\n            if (!smallestAsset) { rangeReady = true; }\n            biggestAsset = asset;\n        }\n        if (!smallestAsset) { smallestAsset = asset; }\n        if (!longestDescription) { longestDescription = asset; }\n        if (!shortestDescription) { shortestDescription = asset; }\n\n        if (asset.value >= biggestAsset.value) { biggestAsset = asset; }\n        if (asset.value < smallestAsset.value) { smallestAsset = asset; }\n        if (asset.description.length >= longestDescription.description.length) { longestDescription = asset; }\n        if (asset.description.length < shortestDescription.description.length) { shortestDescription = asset; }\n    });\n\n    averageValue /= assets.length;\n    if (rangeReady) { assetRange = biggestAsset.value - smallestAsset.value; }\n\n    return { averageValue, assetRange, biggestAsset, smallestAsset, longestDescription, shortestDescription };\n}\n\nexport default StatsPage;","import React from 'react';\nimport Header from './components/Header';\nimport HomePage from './pages/HomePage';\nimport CompanyPage from './pages/CompanyPage';\nimport ContactPage from './pages/ContactPage';\nimport LoginPage from './pages/LoginPage';\nimport Profile from './pages/Profile';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport AddAsset from './pages/AddAsset';\nimport Footer from './components/Footer';\nimport AssetPage from './pages/AssetPage';\nimport StatsPage from './pages/StatsPage';\nimport './styles/App.css';\n\nfunction App() {\n  return (\n    <div className='app'>\n      <Router>\n        <Header />\n        <main className='content'>\n          <Switch>\n            <Route path='/assets'>\n              <Assets />\n            </Route>\n            <Route path='/statistics'>\n                <StatsPage />\n            </Route>\n            <Route path='/add_asset'>\n              <AddAsset />\n            </Route>\n            <Route path='/page1'>\n              <Page1 />\n            </Route>\n            <Route path='/page2'>\n              <Page2 />\n            </Route>\n            <Route path='/page3'>\n              <Page3 />\n            </Route>\n            <Route path='/contact'>\n              <Contact />\n            </Route>\n            <Route path='/login'>\n              <LoginPage />\n            </Route>\n            <Route path='/profile'>\n              <Profile />\n            </Route>\n            <Route path='/asset/:id'>\n                <AssetPage />\n            </Route>\n            <Route path='/'>\n              <Home />\n            </Route>\n          </Switch>\n        </main>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nfunction Home() {\n  return <CompanyPage />;\n}\n\nfunction Assets() {\n  return <HomePage />;\n}\n\nfunction Page1() {\n  return <h2>Page1</h2>;\n}\n\nfunction Page2() {\n  return <h2>Page2</h2>;\n}\n\nfunction Page3() {\n  return <h2>Page3</h2>;\n}\n\nfunction Contact() {\n  return <ContactPage />;\n}\n\nfunction Login() {\n  return <LoginPage />;\n}\n\nfunction Stats() {\n    return <StatsPage />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ATPLogo.87bdb1c9.png\";"],"sourceRoot":""}