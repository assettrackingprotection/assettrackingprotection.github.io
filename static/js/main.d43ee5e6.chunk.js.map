{"version":3,"sources":["components/Header.js","utils/truncate.js","components/AssetCard/AssetCard.js","components/AssetEntry.js","services/atpApi.js","services/authService/routes.js","services/localStorageService.js","services/authService/index.js","hooks/useAuth.js","services/assetService/routes.js","services/assetService/index.js","components/LoadingSpinner.js","components/AssetList/AssetList.js","pages/HomePage.js","pages/CompanyPage.js","components/common/ContactForm.js","pages/ContactPage.js","pages/LoginPage.js","pages/AddAsset.js","App.js","serviceWorker.js","index.js"],"names":["Header","Navbar","bg","variant","expand","className","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","Item","Form","inline","FormControl","type","placeholder","Button","truncate","originalString","limit","truncatedStr","substr","length","AssetCard","asset","description","Col","md","lg","Card","Title","name","value","Text","AssetEntry","atpApi","process","authRoutes","this","baseRoute","localStorageService","baseKey","key","data","localStorage","setItem","JSON","stringify","parse","getItem","load","save","authService","email","password","firstName","lastName","phone","axios","post","register","console","error","login","res","accessToken","token","refreshToken","refresh","tryRefresh","get","isLoggedIn","headers","Authorization","userDetails","authorizationHeader","exp","jwt","decode","Date","useAuth","callback","redirectRoute","history","useHistory","useEffect","a","push","isAccessTokenExpired","checkLogin","assetRoutes","assetId","assetService","authHeaders","assets","singleAsset","patch","delete","LoadingSpinner","isLoading","children","Row","xs","Spinner","animation","role","NoAssetsNotice","CardView","map","item","SpreadsheetView","AssetList","viewMode","useState","setAssets","setIsLoading","getAllAssets","retreiveAssets","ViewModeToggle","setViewMode","handleViewModeChange","e","assetViewMode","target","InputGroup","FormLabel","FormCheck","checked","onChange","HomePage","Container","CompanyPage","Carousel","src","alt","Image","thumbnail","style","marginTop","size","href","ContactForm","message","formData","setFormData","onSubmit","payload","alert","method","htmlFor","rows","ContactPage","Map","withScriptjs","withGoogleMap","props","defaultZoom","defaultCenter","lat","lng","position","heading","color","backgroundColor","personalImage","margin","googleMapURL","loadingElement","height","containerElement","mapElement","sleep","ms","Promise","resolve","setTimeout","LoginForm","setPage","useForm","handleSubmit","submitData","ref","required","onClick","RegisterForm","clearError","setError","errors","pattern","validate","correct","test","Password","LoginPage","page","AddAsset","createAsset","Group","controlId","Label","Control","Prepend","step","File","label","custom","Home","Assets","Page1","Page2","Page3","Contact","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d43ee5e6.chunk.js","sourcesContent":["import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\nimport { Form, Button, FormControl, Nav, NavDropdown } from \"react-bootstrap\";\nimport {\n    Link\n  } from \"react-router-dom\";\n\nfunction Header() {\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n            <div className=\"container\">\n                <Navbar.Brand as={Link} to=\"/\">ATP</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n                        <Nav.Link as={Link} to=\"/assets\">Assets</Nav.Link>\n                        <NavDropdown className=\"mr-auto\" title=\"Pages\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item as={Link} to=\"/contact\">Contact</NavDropdown.Item>\n                            <NavDropdown.Item as={Link} to=\"/page2\">Page 2</NavDropdown.Item>\n                            <NavDropdown.Item as={Link} to=\"/page3\">Page 3</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                    <Form inline>\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                        <Button variant=\"outline-success\">Search</Button>\n                    </Form>\n                    <Button className=\"ml-2\" variant=\"outline-primary\" as={Link} to=\"/login\">Login</Button>\n                </Navbar.Collapse>\n            </div>\n        </Navbar>\n    );\n}\n\nexport default Header;","function truncate(originalString, limit) {\n  let truncatedStr = originalString.substr(0, limit);\n\n  if (truncatedStr.length < originalString.length) {\n    truncatedStr += '...';\n  }\n\n  return truncatedStr;\n}\n\nexport default truncate;\n","import React from 'react';\nimport { Card, Button, Col } from 'react-bootstrap';\nimport truncate from '../../utils/truncate';\nimport '../../styles/AssetCard.css';\n\nfunction AssetCard({ asset }) {\n  const description = asset.description\n    ? truncate(asset.description, 40)\n    : 'No description provided';\n\n  return (\n    <Col md='6' lg='4' className='asset-card'>\n      <Card>\n        <Card.Title>{`${asset.name}: $${asset.value}`}</Card.Title>\n        <Card.Text>{description}</Card.Text>\n        <Button>View Details</Button>\n      </Card>\n    </Col>\n  );\n}\n\nexport default AssetCard;\n","import React from 'react';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport truncate from '../utils/truncate';\nimport '../styles/AssetEntry.css';\n\nfunction AssetEntry({ asset }) {\n  const description = asset.description\n    ? truncate(asset.description, 33)\n    : 'No description provided';\n\n  return (\n    <div className='asset-entry'>\n      <Col>{asset.name}</Col>\n      <Col>{`$${asset.value}`}</Col>\n      <Col>{description}</Col>\n      <Col>\n        <Button variant='primary'>View Details</Button>\n      </Col>\n    </div>\n  );\n}\n\nexport default AssetEntry;\n","function atpApi() {\n  const protocol = process.env.REACT_APP_API_PROTOCOL || 'http';\n  const host = process.env.REACT_APP_API_HOST || 'localhost:8000';\n\n  return `${protocol}://${host}`;\n}\n\nexport default atpApi();\n","import atpApi from '../atpApi';\n\nclass AuthRoutes {\n  get baseRoute() {\n    return `${atpApi}/auth`;\n  }\n\n  register() {\n    return `${this.baseRoute}/register`;\n  }\n\n  login() {\n    return `${this.baseRoute}/login`;\n  }\n\n  refresh() {\n    return `${this.baseRoute}/refresh`;\n  }\n\n  isLoggedIn() {\n    return `${this.baseRoute}/isLoggedIn`;\n  }\n\n  userDetails() {\n    return `${this.baseRoute}/userDetails`;\n  }\n}\n\nconst authRoutes = new AuthRoutes();\nexport default authRoutes;\n","class LocalStorageService {\n  constructor() {\n    this.baseKey = 'ATP';\n  }\n\n  save(key, data) {\n    localStorage.setItem(`${this.baseKey}.${key}`, JSON.stringify(data));\n  }\n\n  load(key) {\n    return JSON.parse(localStorage.getItem(`${this.baseKey}.${key}`));\n  }\n\n  get accessToken() {\n    return this.load('accessToken');\n  }\n\n  set accessToken(data) {\n    this.save('accessToken', data);\n  }\n\n  get refreshToken() {\n    return this.load('refreshToken');\n  }\n\n  set refreshToken(data) {\n    this.save('refreshToken', data);\n  }\n\n  get assetViewMode() {\n    const data = this.load('assetViewMode');\n    if (data == null) {\n      return 'card';\n    }\n\n    return data;\n  }\n\n  set assetViewMode(value) {\n    this.save('assetViewMode', value);\n  }\n}\n\nconst localStorageService = new LocalStorageService();\nexport default localStorageService;\n","import axios from 'axios';\nimport authRoutes from './routes';\nimport localStorageService from '../localStorageService';\nimport jwt from 'jsonwebtoken';\n\nclass AuthService {\n  get accessToken() {\n    return localStorageService.accessToken;\n  }\n\n  get isAccessTokenExpired() {\n    if (this.accessToken) {\n      const { exp } = jwt.decode(this.accessToken);\n      const expirationTime = new Date(exp * 1000);\n      const now = new Date();\n      return expirationTime - now <= 0;\n    }\n\n    return true;\n  }\n\n  get refreshToken() {\n    return localStorageService.refreshToken;\n  }\n\n  set accessToken(value) {\n    localStorageService.accessToken = value;\n  }\n\n  set refreshToken(value) {\n    localStorageService.refreshToken = value;\n  }\n\n  get authHeaders() {\n    return { Authorization: `Bearer ${this.accessToken}` };\n  }\n\n  async register(email, password, firstName, lastName, phone) {\n    try {\n      await axios.post(authRoutes.register(), {\n        email,\n        password,\n        firstName,\n        lastName,\n        phone\n      });\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n\n  async login(email, password) {\n    try {\n      const res = await axios.post(authRoutes.login(), {\n        email,\n        password\n      });\n      this.accessToken = res.data.token;\n      this.refreshToken = res.data.refresh;\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n\n  async refresh() {\n    try {\n      const res = await axios.post(authRoutes.refresh(), {\n        refresh: this.refreshToken\n      });\n      this.accessToken = res.data.token;\n      this.refreshToken = res.data.refresh;\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n\n  async isLoggedIn(tryRefresh = true) {\n    try {\n      await axios.get(authRoutes.isLoggedIn(), {\n        headers: {\n          Authorization: `Bearer ${this.accessToken}`\n        }\n      });\n      return true;\n    } catch (error) {\n      if (tryRefresh) {\n        const refreshSucceded = await this.refresh();\n        if (refreshSucceded) {\n          return await this.isLoggedIn(false);\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    }\n  }\n\n  async userDetails() {\n    try {\n      const res = await axios.get(authRoutes.userDetails(), {\n        headers: this.authorizationHeader\n      });\n      return {\n        email: res.data.email,\n        firstName: res.data.firstName,\n        lastName: res.data.lastName,\n        phone: res.data.phone\n      };\n    } catch (error) {\n      return null;\n    }\n  }\n}\n\nconst authService = new AuthService();\nexport default authService;\n","import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport authService from '../services/authService';\n\nfunction useAuth(callback, redirectRoute = '/') {\n  const history = useHistory();\n\n  useEffect(() => {\n    async function checkLogin() {\n      const isLoggedIn = await authService.isLoggedIn();\n      if (isLoggedIn) {\n        callback();\n      } else {\n        history.push(redirectRoute);\n      }\n    }\n    if (!authService.isAccessTokenExpired) {\n      callback();\n    } else {\n      checkLogin();\n    }\n  }, []);\n}\n\nexport default useAuth;\n","import atpApi from '../atpApi';\n\nclass AssetRoutes {\n  get baseRoute() {\n    return `${atpApi}/asset`;\n  }\n\n  singleAsset(assetId) {\n    return `${this.baseRoute}/${assetId}`;\n  }\n}\n\nconst assetRoutes = new AssetRoutes();\nexport default assetRoutes;\n","import axios from 'axios';\nimport assetRoutes from './routes';\nimport authService from '../authService';\n\nclass AssetService {\n  async getAllAssets() {\n    try {\n      const res = await axios.get(assetRoutes.baseRoute, { headers: authService.authHeaders });\n      return res.data.assets;\n    } catch (error) {\n      console.error(error);\n      return null;\n    }\n  }\n\n  async getSingleAsset(id) {\n    try {\n      const res = await axios.get(assetRoutes.singleAsset(id), {\n        headers: authService.authHeaders\n      });\n      return res.data;\n    } catch (error) {\n      console.error(error);\n      return null;\n    }\n  }\n\n  async createAsset(name, value, description) {\n    try {\n      await axios.post(\n        assetRoutes.baseRoute,\n        {\n          name,\n          value,\n          description\n        },\n        {\n          headers: authService.authHeaders\n        }\n      );\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n\n  async updateAsset(id, name = null, value = null, description = null) {\n    try {\n      await axios.patch(\n        assetRoutes.singleAsset(id),\n        {\n          name,\n          value,\n          description\n        },\n        {\n          headers: authService.authHeaders\n        }\n      );\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n\n  async deleteAsset(id) {\n    try {\n      await axios.delete(assetRoutes.singleAsset(id), { headers: authService.authHeaders });\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n}\n\nconst assetService = new AssetService();\nexport default assetService;\n","import React from 'react';\nimport { Spinner, Row, Col } from 'react-bootstrap';\nimport '../styles/Spinner.css';\n\n/**\n *\n * @param {isLoading} isLoading Whether the component should show a loading spinner\n * @param {children} children The components to render if the data is loaded\n */\nfunction LoadingSpinner({ isLoading, children }) {\n  if (isLoading) {\n    return (\n      <Row>\n        <Col xs='12' className='d-flex justify-content-center'>\n          <Spinner className='loading-spinner' animation='border' variant='primary' role='status' />\n        </Col>\n      </Row>\n    );\n  } else {\n    return <>{children}</>;\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { useState } from 'react';\nimport AssetCard from '../AssetCard';\nimport AssetEntry from '../AssetEntry';\nimport { Row, Col } from 'react-bootstrap';\nimport useAuth from '../../hooks/useAuth';\nimport assetService from '../../services/assetService';\nimport LoadingSpinner from '../LoadingSpinner';\nimport '../../styles/AssetList.css';\n\nfunction NoAssetsNotice() {\n  return (\n    <Row>\n      <Col xs='12' className='no-assets-notice'>\n        <h3>You have not added any assets.</h3>\n      </Col>\n    </Row>\n  );\n}\n\nfunction CardView({ assets }) {\n  if (assets.length > 0) {\n    return (\n      <Row>\n        {assets.map(item => {\n          return <AssetCard key={item.id} asset={item} />;\n        })}\n      </Row>\n    );\n  } else {\n    return <NoAssetsNotice />;\n  }\n}\n\nfunction SpreadsheetView({ assets }) {\n  if (assets.length > 0) {\n    return (\n      <div className='asset-spreadsheet'>\n        <div className='asset-spreadsheet-header'>\n          <Col>Name</Col>\n          <Col>Value</Col>\n          <Col>Description</Col>\n          <Col>Details</Col>\n        </div>\n        {assets.map(item => {\n          return <AssetEntry key={item.id} asset={item} />;\n        })}\n      </div>\n    );\n  } else {\n    return <NoAssetsNotice />;\n  }\n}\n\nfunction AssetList({ viewMode }) {\n  const [assets, setAssets] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useAuth(() => {\n    const retreiveAssets = async () => {\n      const data = await assetService.getAllAssets();\n      setAssets(data);\n      setIsLoading(false);\n    };\n    retreiveAssets();\n  });\n\n  return (\n    <LoadingSpinner isLoading={isLoading}>\n      {viewMode === 'spreadsheet' ? (\n        <SpreadsheetView assets={assets} />\n      ) : (\n        <CardView assets={assets} />\n      )}\n    </LoadingSpinner>\n  );\n}\n\nexport default AssetList;\n","import React, { useState } from 'react';\nimport AssetList from '../components/AssetList';\nimport { Container, Row, Col, Button, FormCheck, FormLabel, InputGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport localStorageService from '../services/localStorageService';\nimport '../styles/AssetPage.css';\n\nfunction ViewModeToggle({ viewMode, setViewMode }) {\n  const handleViewModeChange = e => {\n    localStorageService.assetViewMode = e.target.value;\n    setViewMode(e.target.value);\n  };\n\n  return (\n    <Col>\n      <InputGroup>\n        <FormLabel className='view-mode-toggle'>\n          <FormCheck\n            type='radio'\n            value='card'\n            checked={viewMode === 'card'}\n            onChange={handleViewModeChange}\n          />\n          Card View\n        </FormLabel>\n        <FormLabel className='view-mode-toggle'>\n          <FormCheck\n            type='radio'\n            value='spreadsheet'\n            checked={viewMode === 'spreadsheet'}\n            onChange={handleViewModeChange}\n          />\n          Spreadsheet View\n        </FormLabel>\n      </InputGroup>\n    </Col>\n  );\n}\n\nfunction HomePage() {\n  const [viewMode, setViewMode] = useState(localStorageService.assetViewMode);\n\n  return (\n    <div>\n      <Container>\n        <br></br>\n        <Row>\n          <Col>\n            <h1>Your Assets:</h1>\n          </Col>\n          <Col>\n            <Button variant='success btn-lg float-right' as={Link} to='/add_asset'>\n              New\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <ViewModeToggle viewMode={viewMode} setViewMode={setViewMode} />\n        </Row>\n        <AssetList viewMode={viewMode} />\n      </Container>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport Image from 'react-bootstrap/Image'\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { FaEnvelope, FaGithub, FaPhone } from 'react-icons/fa';\n\nfunction CompanyPage() {\n    return (\n        <div className=\"container\">\n            <br></br>\n            <h1>ATP - Asset Tracking & Protection</h1>\n            <br></br>\n            <Carousel>\n                <Carousel.Item>\n                    <img\n                    className=\"d-block w-100\"\n                    src=\"https://www.bunchandbrocklaw.com/wp-content/uploads/2018/12/chapter-7-exemptions-1072x425.jpg\"\n                    alt=\"First slide\"\n                    />\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img\n                    className=\"d-block w-100\"\n                    src=\"https://oregonshar.files.wordpress.com/2014/04/1404-mustangs_088-line-of-pony-cars.jpg?w=848\"\n                    alt=\"Second slide\"\n                    />\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img\n                    className=\"d-block w-100\"\n                    src=\"https://images.macrumors.com/t/0dAUvf2F-YHP97tMDCDAnEwMSok=/800x0/article-new/2018/12/appleproductlineup-800x313.jpg\"\n                    alt=\"Third slide\"\n                    />\n                </Carousel.Item>\n            </Carousel>\n            <br></br>\n            <h3>About ATP</h3>\n            <br></br>\n            <p>We should come up with a paragraph here about the company's history and what our slogan is or something like that.</p>\n            <br></br>\n            <h3>ATP Team</h3>\n            <Row>\n                <Col xs={6} md={4}>\n                <Image src=\"https://static.independent.co.uk/s3fs-public/thumbnails/image/2015/06/06/15/Chris-Pratt.jpg?w968h681\" thumbnail />\n                <h4>Tyler Green</h4>\n                <br></br>\n                <p>about Tyler</p>\n                </Col>\n                <Col xs={6} md={4}>\n                <Image src=\"https://s.hdnux.com/photos/51/23/24/10827008/3/920x920.jpg\" thumbnail />\n                <h4>Ethan Watson</h4>\n                <br></br>\n                <p>about Ethan</p>\n                </Col>\n                <Col xs={6} md={4} className=\"shadow-lg\">\n                    <Image style={{ marginTop: 12 }} src=\"https://www.tubefilter.com/wp-content/uploads/2019/11/dobrik-people.jpg\" thumbnail />\n                    <h3 className=\"text-center\">Jason Boyd</h3>\n                    <div className=\"p-3\">\n                        <Row>\n                            <Col className=\"text-right\"><FaEnvelope size={32} /></Col>\n                            <Col xs={8} className=\"text-left\"><p className=\"lead\"><a href=\"mailto:jasonboyd99@gmail.com?\">Email Jason</a></p></Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"text-right\"><FaGithub size={32} /></Col>\n                            <Col xs={8} className=\"text-left\"><p className=\"lead\"><a target=\"_blank\" href=\"https://github.com/itsjaboyd\">Jason's Github</a></p></Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"text-right\"><FaPhone size={32} /></Col>\n                            <Col xs={8} className=\"text-left\"><p className=\"lead\">801 - 529 - 0853</p></Col>\n                        </Row>\n                    </div>\n                    <h4 className=\"p-2\">About Jason</h4>\n                    <hr />\n                    <p>\n                        Jason is currently a senior studying computer science at Utah State Univeristy in Logan, Utah. His interests include mobile application development,\n                        producing music, and exploring the outdoors.\n                    </p>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default CompanyPage;","import React, { useState } from 'react';\n\nfunction ContactForm() {\n\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        message: '',\n    });\n\n    function handleSubmit(e) {\n        var payload = { formData }.formData.name + \"\\n\" +\n            { formData }.formData.email + \"\\n\" +\n            { formData }.formData.message;\n        alert(\"STATE DATA:\\n\" + payload);\n    };\n\n    return (\n        <form id=\"contact-form\" onSubmit={handleSubmit} method=\"POST\">\n            <div className=\"form-group\">\n                <label htmlFor=\"name\">Name</label>\n                <input type=\"text\" className=\"form-control\" value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                <input type=\"email\" className=\"form-control\" value={formData.email} onChange={(e) => setFormData({ ...formData, email: e.target.value })} />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"message\">Message</label>\n                <textarea className=\"form-control\" rows=\"5\" value={formData.message} onChange={(e) => setFormData({ ...formData, message: e.target.value })} />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n        </form>\n    );\n}\n\nexport default ContactForm;","import React, { useState } from 'react';\nimport { Container, Row, Col, Image } from 'react-bootstrap';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport ContactForm from '../components/common/ContactForm';\nimport { FaEnvelope, FaGithub, FaPhone } from 'react-icons/fa';\n\nfunction ContactPage() {\n    const contactStyling = {\n        heading: {\n            color: \"white\",\n            backgroundColor: \"black\",\n        },\n        personalImage: {\n            margin: 24,\n        },\n    };\n\n    const Map = withScriptjs(withGoogleMap(props =>\n        <GoogleMap\n            defaultZoom={10}\n            defaultCenter={{ lat: 41.7355556, lng: -111.8336111 }}\n        >\n            <Marker position={{ lat: 41.7355556, lng: -111.8336111 }}/>\n        </GoogleMap>\n    ));\n\n    return (\n        <div>\n            <Container>\n                <div className=\"jumbotron text-center\">\n                    <h1 className=\"display-2\">Contact ATP!</h1>\n                    <div style={contactStyling.description}>\n                        <p className=\"lead\">\n                                Although we may not be a fully fledged service yet, we value your feedback and any questions you may have!\n                        </p>\n                    </div>\n                </div>\n                <Row>\n                    <Col className=\"px-5\">\n                        <ContactForm />\n                    </Col>\n                    <Col className=\"text-center\">\n                        <h2>Our Location</h2>\n                        <p>\n                            We are currently based in Logan, Utah.\n                        </p>\n                        <div className=\"shadow\">\n                            <Map\n                                googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBOBXN_Ul3kEatVYTHOUzf_-Zr1WBBNljA&libraries=geometry,drawing,places\"\n                                loadingElement={<div style={{ height: `100%` }} />}\n                                containerElement={<div style={{ height: `320px` }} />}\n                                mapElement={<div style={{ height: `100%` }} />}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n                <hr className=\"my-5\" />\n            </Container>\n        </div>\n    );\n}\n\n\nexport default ContactPage;","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/LoginPage.css';\nimport { Row, Col } from 'react-bootstrap';\nimport authService from '../services/authService';\nimport LoadingSpinner from '../components/LoadingSpinner';\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nfunction LoginForm({ setPage }) {\n  const { register, handleSubmit } = useForm();\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n  const submitData = async data => {\n    setIsLoading(true);\n    const success = await authService.login(data.email, data.password);\n    if (success) {\n      // redirect to asset page on successful login\n      history.push('/assets');\n    } else {\n      alert('login error');\n    }\n    setIsLoading(false);\n  };\n  return (\n    <LoadingSpinner isLoading={isLoading}>\n      <div className='login-page'>\n        <div className='text-center'>\n          <h1 className='display-2'>ATP</h1>\n          <h4>Please login</h4>\n        </div>\n        <form className='login-form' onSubmit={handleSubmit(submitData)}>\n          <div className='form-group'>\n            <label htmlFor='email'>Email</label>\n            <input\n              className='form-control form-control-lg'\n              name='email'\n              placeholder='example@email.com'\n              type='email'\n              ref={register({ required: true })}\n            />\n\n            <label htmlFor='password'>Password</label>\n            <input\n              className='form-control form-control-lg'\n              name='password'\n              placeholder='password'\n              type='password'\n              ref={register({ required: true })}\n            />\n          </div>\n          <div className='form-group text-center'>\n            <input type='checkbox' name='remember' ref={register} />\n            <label className='mx-2' htmlFor='remember'>\n              Remember Me\n            </label>\n          </div>\n          <div>\n            <Row>\n              <Col>\n                <button className='btn btn-outline-primary btn-block' type='submit'>\n                  Login\n                </button>\n              </Col>\n              <Col>\n                <button\n                  className='btn btn-outline-success btn-block'\n                  type='submit'\n                  onClick={() => {\n                    setPage(false);\n                  }}\n                >\n                  Register\n                </button>\n              </Col>\n            </Row>\n          </div>\n        </form>\n      </div>\n    </LoadingSpinner>\n  );\n}\n\nfunction RegisterForm() {\n  const { register, handleSubmit, clearError, setError, errors } = useForm();\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n  const submitData = async data => {\n    setIsLoading(true);\n    let success = await authService.register(\n      data.email,\n      data.password,\n      data.firstName,\n      data.lastName,\n      data.phone\n    );\n    if (success) {\n      success = await authService.login(data.email, data.password);\n      if (success) {\n        history.push('/assets');\n      } else {\n        alert('login error');\n      }\n    } else {\n      alert('register error');\n    }\n    setIsLoading(false);\n  };\n  return (\n    <LoadingSpinner isLoading={isLoading}>\n      <div className='login-page'>\n        <div className='text-center'>\n          <h1 className='display-2'>ATP</h1>\n          <h4>Registration</h4>\n        </div>\n        <div>\n          <form className='register-form' onSubmit={handleSubmit(submitData)}>\n            <div className='form-group'>\n              <Row>\n                <Col>\n                  <label htmlFor='firstName'>First Name</label>\n                  <input\n                    className='form-control'\n                    type='text'\n                    placeholder='First Name'\n                    name='firstName'\n                    ref={register({ required: true })}\n                  />\n                </Col>\n                <Col>\n                  <label htmlFor='lastName'>Last Name</label>\n                  <input\n                    className='form-control'\n                    type='text'\n                    placeholder='Last Name'\n                    name='lastName'\n                    ref={register({ required: true })}\n                  />\n                </Col>\n              </Row>\n              <label htmlFor='email'>Email Address</label>\n              <input\n                className='form-control'\n                type='email'\n                placeholder='example@email.com'\n                name='email'\n                ref={register({ required: true })}\n              />\n              <label htmlFor='phone'>Phone Number</label>\n              <input\n                className='form-control'\n                type='tel'\n                placeholder='123-456-7890'\n                name='phone'\n                pattern='[0-9]{3}-[0-9]{3}-[0-9]{4}'\n                ref={register}\n              />\n              <Row>\n                <Col>\n                  <label htmlFor='password'>New Password</label>\n                  <input\n                    className='form-control'\n                    type='password'\n                    placeholder='Password'\n                    name='password'\n                    ref={register({\n                      required: true,\n                      validate: {\n                        correct: value =>\n                          /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/.test(\n                            value\n                          ) === true\n                      }\n                    })}\n                    onChange={async e => {\n                      const value = e.target.value;\n                      await sleep(1000);\n                      if (\n                        /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/.test(value)\n                      ) {\n                        clearError('Password');\n                      } else {\n                        setError(\n                          'Password',\n                          'notMatch',\n                          'Password must be 8 characters long, contain one digit, upper, lower and special case character.'\n                        );\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <div className='text-center'>\n                {errors.Password && <p className='error-message'>{errors.Password.message}</p>}\n              </div>\n              <button className='btn btn-outline-success btn-block my-4' type='submit'>\n                Register\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </LoadingSpinner>\n  );\n}\n\nfunction LoginPage() {\n  const [page, setPage] = useState(true);\n\n  if (page) {\n    return <LoginForm setPage={setPage} />;\n  } else {\n    return <RegisterForm />;\n  }\n}\n\nexport default LoginPage;\n","import React, { useState } from 'react';\nimport { Container, Button, InputGroup } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport useAuth from '../hooks/useAuth';\nimport assetService from '../services/assetService';\n\nfunction AddAsset() {\n  const history = useHistory();\n  const { handleSubmit, register } = useForm();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useAuth(() => {});\n\n  const onSubmit = async data => {\n    setIsLoading(true);\n    const success = await assetService.createAsset(data.name, data.value, data.description);\n    if (success) {\n      history.push('/assets');\n    } else {\n      console.error('Error creating asset');\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <LoadingSpinner isLoading={isLoading}>\n      <Container>\n        <br></br>\n        <h1>Add Asset</h1>\n        <br></br>\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <Form.Group controlId='formGroupName'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type='name'\n              name='name'\n              placeholder='Enter name'\n              ref={register({ required: true })}\n            />\n          </Form.Group>\n          <Form.Group controlId='formGroupPrice'>\n            <Form.Label>Price</Form.Label>\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text id='inputGroupPrepend'>$</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                type='number'\n                step='any'\n                name='value'\n                placeholder='Enter price'\n                ref={register({ required: true })}\n              />\n            </InputGroup>\n          </Form.Group>\n          <Form.Group controlId='formGroupDescription'>\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              type='description'\n              placeholder='Enter description'\n              name='description'\n              ref={register}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Picture</Form.Label>\n            <Form.File\n              id='custom-file'\n              label='Custom file input'\n              name='picture'\n              ref={register}\n              custom\n            />\n          </Form.Group>\n          <Button variant='success' type='submit'>\n            Create\n          </Button>\n        </Form>\n      </Container>\n    </LoadingSpinner>\n  );\n}\n\nexport default AddAsset;\n","import React from 'react';\nimport Header from './components/Header';\nimport HomePage from './pages/HomePage';\nimport CompanyPage from './pages/CompanyPage';\nimport ContactPage from './pages/ContactPage';\nimport LoginPage from './pages/LoginPage';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport AddAsset from './pages/AddAsset';\n\nfunction App() {\n  return ( \n    <div>\n      <Router>\n        <Header />\n        <Switch>\n            <Route path=\"/assets\">\n              <Assets />\n            </Route>\n            <Route path=\"/add_asset\">\n              <AddAsset/>\n            </Route>\n            <Route path=\"/page1\">\n              <Page1 />\n            </Route>\n            <Route path=\"/page2\">\n              <Page2 />\n            </Route>\n            <Route path=\"/page3\">\n              <Page3 />\n            </Route>\n            <Route path=\"/contact\">\n                <Contact />\n            </Route>\n            <Route path=\"/login\">\n                <LoginPage />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n    </div>\n  );\n}\n\nfunction Home() {\n  return <CompanyPage />;\n}\n\nfunction Assets() {\n  return <HomePage />;\n}\n\nfunction Page1() {\n  return <h2>Page1</h2>;\n}\n\nfunction Page2() {\n  return <h2>Page2</h2>;\n}\n\nfunction Page3() {\n  return <h2>Page3</h2>;\n}\n\nfunction Contact() {\n    return <ContactPage />;\n}\n\nfunction Login() {\n    return <LoginPage />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}