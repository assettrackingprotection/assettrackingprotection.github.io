{"version":3,"sources":["assets/images/profile_icon.jpg","services/atpApi.js","services/authService/routes.js","services/localStorageService.js","services/authService/index.js","components/Header.js","utils/truncate.js","components/AssetCard/AssetCard.js","components/AssetEntry.js","hooks/useAuth.js","services/assetService/routes.js","services/assetService/index.js","components/LoadingSpinner.js","components/AssetList/AssetList.js","pages/HomePage.js","pages/CompanyPage.js","components/common/ContactForm.js","pages/ContactPage.js","pages/LoginPage.js","pages/Profile.js","pages/AddAsset.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","atpApi","process","authRoutes","this","baseRoute","localStorageService","baseKey","key","data","localStorage","setItem","JSON","stringify","parse","getItem","load","save","value","authService","email","password","firstName","lastName","phone","axios","post","register","console","error","login","res","accessToken","token","refreshToken","refresh","tryRefresh","get","isLoggedIn","headers","Authorization","userDetails","authHeaders","exp","jwt","decode","Date","Header","useState","setLoggedIn","useEffect","a","retrieveUser","Navbar","bg","variant","expand","className","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","Form","inline","FormControl","type","placeholder","Button","truncate","originalString","limit","truncatedStr","substr","length","AssetCard","asset","description","imageUrl","Col","md","lg","Card","Img","src","width","height","Title","name","Text","AssetEntry","useAuth","callback","redirectRoute","history","useHistory","push","isAccessTokenExpired","checkLogin","assetRoutes","assetId","assetService","assets","singleAsset","image","formData","FormData","append","assetImage","patch","delete","LoadingSpinner","isLoading","children","Row","xs","Spinner","animation","role","NoAssetsNotice","CardView","map","item","SpreadsheetView","AssetList","viewMode","setAssets","setIsLoading","getAllAssets","retreiveAssets","ViewModeToggle","setViewMode","handleViewModeChange","e","assetViewMode","target","InputGroup","FormLabel","FormCheck","checked","onChange","HomePage","Container","CompanyPage","Carousel","Item","alt","Image","thumbnail","style","marginTop","size","href","ContactForm","message","setFormData","onSubmit","payload","alert","method","htmlFor","rows","ContactPage","Map","withScriptjs","withGoogleMap","props","defaultZoom","defaultCenter","lat","lng","position","heading","color","backgroundColor","personalImage","margin","googleMapURL","loadingElement","containerElement","mapElement","sleep","ms","Promise","resolve","setTimeout","LoginForm","setPage","useForm","handleSubmit","submitData","ref","required","onClick","RegisterForm","clearError","setError","errors","pattern","validate","correct","test","Password","LoginPage","page","Profile","user","setUser","totalvalue","setTotalvalue","totalprice","forEach","element","retreiveUser","class","icon","roundedCircle","title","data-toggle","AddAsset","imageFileName","setImageFileName","log","createAsset","Group","controlId","Label","Control","Prepend","step","File","label","accept","custom","files","Home","Assets","Page1","Page2","Page3","Contact","App","basename","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1890bece.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile_icon.6d691fab.jpg\";","function atpApi() {\n  const protocol = process.env.REACT_APP_API_PROTOCOL || 'http';\n  const host = process.env.REACT_APP_API_HOST || 'localhost:8000';\n\n  return `${protocol}://${host}`;\n}\n\nexport default atpApi();\n","import atpApi from '../atpApi';\n\nclass AuthRoutes {\n  get baseRoute() {\n    return `${atpApi}/auth`;\n  }\n\n  register() {\n    return `${this.baseRoute}/register`;\n  }\n\n  login() {\n    return `${this.baseRoute}/login`;\n  }\n\n  refresh() {\n    return `${this.baseRoute}/refresh`;\n  }\n\n  isLoggedIn() {\n    return `${this.baseRoute}/isLoggedIn`;\n  }\n\n  userDetails() {\n    return `${this.baseRoute}/userDetails`;\n  }\n}\n\nconst authRoutes = new AuthRoutes();\nexport default authRoutes;\n","class LocalStorageService {\n  constructor() {\n    this.baseKey = 'ATP';\n  }\n\n  save(key, data) {\n    localStorage.setItem(`${this.baseKey}.${key}`, JSON.stringify(data));\n  }\n\n  load(key) {\n    return JSON.parse(localStorage.getItem(`${this.baseKey}.${key}`));\n  }\n\n  get accessToken() {\n    return this.load('accessToken');\n  }\n\n  set accessToken(data) {\n    this.save('accessToken', data);\n  }\n\n  get refreshToken() {\n    return this.load('refreshToken');\n  }\n\n  set refreshToken(data) {\n    this.save('refreshToken', data);\n  }\n\n  get assetViewMode() {\n    const data = this.load('assetViewMode');\n    if (data == null) {\n      return 'card';\n    }\n\n    return data;\n  }\n\n  set assetViewMode(value) {\n    this.save('assetViewMode', value);\n  }\n}\n\nconst localStorageService = new LocalStorageService();\nexport default localStorageService;\n","import axios from 'axios';\nimport authRoutes from './routes';\nimport localStorageService from '../localStorageService';\nimport jwt from 'jsonwebtoken';\n\nclass AuthService {\n  get accessToken() {\n    return localStorageService.accessToken;\n  }\n\n  get isAccessTokenExpired() {\n    if (this.accessToken) {\n      const { exp } = jwt.decode(this.accessToken);\n      const expirationTime = new Date(exp * 1000);\n      const now = new Date();\n      return expirationTime - now <= 0;\n    }\n\n    return true;\n  }\n\n  get refreshToken() {\n    return localStorageService.refreshToken;\n  }\n\n  set accessToken(value) {\n    localStorageService.accessToken = value;\n  }\n\n  set refreshToken(value) {\n    localStorageService.refreshToken = value;\n  }\n\n  get authHeaders() {\n    return { Authorization: `Bearer ${this.accessToken}` };\n  }\n\n  async register(email, password, firstName, lastName, phone) {\n    try {\n      await axios.post(authRoutes.register(), {\n        email,\n        password,\n        firstName,\n        lastName,\n        phone\n      });\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n\n  async login(email, password) {\n    try {\n      const res = await axios.post(authRoutes.login(), {\n        email,\n        password\n      });\n      this.accessToken = res.data.token;\n      this.refreshToken = res.data.refresh;\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n\n  async refresh() {\n    try {\n      const res = await axios.post(authRoutes.refresh(), {\n        refresh: this.refreshToken\n      });\n      this.accessToken = res.data.token;\n      this.refreshToken = res.data.refresh;\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n\n  async isLoggedIn(tryRefresh = true) {\n    try {\n      await axios.get(authRoutes.isLoggedIn(), {\n        headers: {\n          Authorization: `Bearer ${this.accessToken}`\n        }\n      });\n      return true;\n    } catch (error) {\n      if (tryRefresh) {\n        const refreshSucceded = await this.refresh();\n        if (refreshSucceded) {\n          return await this.isLoggedIn(false);\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    }\n  }\n\n  async userDetails() {\n    try {\n      const res = await axios.get(authRoutes.userDetails(), {\n        headers: this.authHeaders\n      });\n      return {\n        email: res.data.email,\n        firstName: res.data.firstName,\n        lastName: res.data.lastName,\n        phone: res.data.phone\n      };\n    } catch (error) {\n      return null;\n    }\n  }\n}\n\nconst authService = new AuthService();\nexport default authService;\n","import React, { useState, useEffect } from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\nimport { Form, Button, FormControl, Nav, NavDropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport authService from \"../services/authService\";\n\nfunction Header() {\n\n    const [isLoggedIn, setLoggedIn] = useState([]);\n\n    useEffect(() => {\n        const retrieveUser = async() => {\n            const data = await authService.isLoggedIn();\n            setLoggedIn(data);\n        }\n        retrieveUser();\n    });\n\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n            <div className=\"container\">\n                <Navbar.Brand as={Link} to=\"/\">ATP</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n                        <Nav.Link as={Link} to=\"/assets\">Assets</Nav.Link>\n                        <Nav.Link as={Link} to=\"/contact\">Contact</Nav.Link>\n                    </Nav>\n                    <Form inline>\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                        <Button variant=\"outline-success\">Search</Button>\n                    </Form>\n                    <RightButton />\n                </Navbar.Collapse>\n            </div>\n        </Navbar>\n    );\n\n    function RightButton() {\n        if(isLoggedIn) {\n            return <Button className=\"ml-2\" variant=\"outline-primary\" as={Link} to=\"/profile\">Profile</Button>\n        } else {\n            return <Button className=\"ml-2\" variant=\"outline-primary\" as={Link} to=\"/login\">Login</Button>\n        }\n    }\n}\n\nexport default Header;","function truncate(originalString, limit) {\n  let truncatedStr = originalString.substr(0, limit);\n\n  if (truncatedStr.length < originalString.length) {\n    truncatedStr += '...';\n  }\n\n  return truncatedStr;\n}\n\nexport default truncate;\n","import React from 'react';\nimport { Card, Button, Col } from 'react-bootstrap';\nimport truncate from '../../utils/truncate';\nimport '../../styles/AssetCard.css';\n\nfunction AssetCard({ asset }) {\n  const description = asset.description\n    ? truncate(asset.description, 40)\n    : 'No description provided';\n\n  const imageUrl = asset.imageUrl\n    ? asset.imageUrl\n    : 'https://bhmlib.org/wp-content/themes/cosimo-pro/images/no-image-box.png';\n\n  return (\n    <Col md='6' lg='4' className='asset-card'>\n      <Card>\n        <Card.Img src={imageUrl} width='320' height='170' />\n        <Card.Title>{`${asset.name}: $${asset.value}`}</Card.Title>\n        <Card.Text>{description}</Card.Text>\n        <Button>View Details</Button>\n      </Card>\n    </Col>\n  );\n}\n\nexport default AssetCard;\n","import React from 'react';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport truncate from '../utils/truncate';\nimport '../styles/AssetEntry.css';\n\nfunction AssetEntry({ asset }) {\n  const description = asset.description\n    ? truncate(asset.description, 33)\n    : 'No description provided';\n\n  return (\n    <div className='asset-entry'>\n      <Col>{asset.name}</Col>\n      <Col>{`$${asset.value}`}</Col>\n      <Col>{description}</Col>\n      <Col>\n        <Button variant='primary'>View Details</Button>\n      </Col>\n    </div>\n  );\n}\n\nexport default AssetEntry;\n","import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport authService from '../services/authService';\n\nfunction useAuth(callback, redirectRoute = '/') {\n  const history = useHistory();\n\n  useEffect(() => {\n    async function checkLogin() {\n      const isLoggedIn = await authService.isLoggedIn();\n      if (isLoggedIn) {\n        callback();\n      } else {\n        history.push(redirectRoute);\n      }\n    }\n    if (!authService.isAccessTokenExpired) {\n      callback();\n    } else {\n      checkLogin();\n    }\n  }, []);\n}\n\nexport default useAuth;\n","import atpApi from '../atpApi';\n\nclass AssetRoutes {\n  get baseRoute() {\n    return `${atpApi}/asset`;\n  }\n\n  singleAsset(assetId) {\n    return `${this.baseRoute}/${assetId}`;\n  }\n\n  assetImage(assetId) {\n    return `${this.baseRoute}/${assetId}/image`;\n  }\n}\n\nconst assetRoutes = new AssetRoutes();\nexport default assetRoutes;\n","import axios from 'axios';\nimport assetRoutes from './routes';\nimport authService from '../authService';\n\nclass AssetService {\n  async getAllAssets() {\n    try {\n      const res = await axios.get(assetRoutes.baseRoute, { headers: authService.authHeaders });\n      return res.data.assets;\n    } catch (error) {\n      console.error(error);\n      return null;\n    }\n  }\n\n  async getSingleAsset(id) {\n    try {\n      const res = await axios.get(assetRoutes.singleAsset(id), {\n        headers: authService.authHeaders\n      });\n      return res.data;\n    } catch (error) {\n      console.error(error);\n      return null;\n    }\n  }\n\n  async createAsset(name, value, description, image) {\n    try {\n      const res = await axios.post(\n        assetRoutes.baseRoute,\n        {\n          name,\n          value,\n          description\n        },\n        {\n          headers: authService.authHeaders\n        }\n      );\n      const id = res.data.id;\n      const formData = new FormData();\n      formData.append('image', image);\n      await axios.post(assetRoutes.assetImage(id), formData, { headers: authService.authHeaders });\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n\n  async updateAsset(id, name = null, value = null, description = null) {\n    try {\n      await axios.patch(\n        assetRoutes.singleAsset(id),\n        {\n          name,\n          value,\n          description\n        },\n        {\n          headers: authService.authHeaders\n        }\n      );\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n\n  async deleteAsset(id) {\n    try {\n      await axios.delete(assetRoutes.singleAsset(id), { headers: authService.authHeaders });\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n}\n\nconst assetService = new AssetService();\nexport default assetService;\n","import React from 'react';\nimport { Spinner, Row, Col } from 'react-bootstrap';\nimport '../styles/Spinner.css';\n\n/**\n *\n * @param {isLoading} isLoading Whether the component should show a loading spinner\n * @param {children} children The components to render if the data is loaded\n */\nfunction LoadingSpinner({ isLoading, children }) {\n  if (isLoading) {\n    return (\n      <Row>\n        <Col xs='12' className='d-flex justify-content-center'>\n          <Spinner className='loading-spinner' animation='border' variant='primary' role='status' />\n        </Col>\n      </Row>\n    );\n  } else {\n    return <>{children}</>;\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { useState } from 'react';\nimport AssetCard from '../AssetCard';\nimport AssetEntry from '../AssetEntry';\nimport { Row, Col } from 'react-bootstrap';\nimport useAuth from '../../hooks/useAuth';\nimport assetService from '../../services/assetService';\nimport LoadingSpinner from '../LoadingSpinner';\nimport '../../styles/AssetList.css';\n\nfunction NoAssetsNotice() {\n  return (\n    <Row>\n      <Col xs='12' className='no-assets-notice'>\n        <h3>You have not added any assets.</h3>\n      </Col>\n    </Row>\n  );\n}\n\nfunction CardView({ assets }) {\n  if (assets.length > 0) {\n    return (\n      <Row>\n        {assets.map(item => {\n          return <AssetCard key={item.id} asset={item} />;\n        })}\n      </Row>\n    );\n  } else {\n    return <NoAssetsNotice />;\n  }\n}\n\nfunction SpreadsheetView({ assets }) {\n  if (assets.length > 0) {\n    return (\n      <div className='asset-spreadsheet'>\n        <div className='asset-spreadsheet-header'>\n          <Col>Name</Col>\n          <Col>Value</Col>\n          <Col>Description</Col>\n          <Col>Details</Col>\n        </div>\n        {assets.map(item => {\n          return <AssetEntry key={item.id} asset={item} />;\n        })}\n      </div>\n    );\n  } else {\n    return <NoAssetsNotice />;\n  }\n}\n\nfunction AssetList({ viewMode }) {\n  const [assets, setAssets] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useAuth(() => {\n    const retreiveAssets = async () => {\n      const data = await assetService.getAllAssets();\n      setAssets(data);\n      setIsLoading(false);\n    };\n    retreiveAssets();\n  });\n\n  return (\n    <LoadingSpinner isLoading={isLoading}>\n      {viewMode === 'spreadsheet' ? (\n        <SpreadsheetView assets={assets} />\n      ) : (\n        <CardView assets={assets} />\n      )}\n    </LoadingSpinner>\n  );\n}\n\nexport default AssetList;\n","import React, { useState } from 'react';\nimport AssetList from '../components/AssetList';\nimport { Container, Row, Col, Button, FormCheck, FormLabel, InputGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport localStorageService from '../services/localStorageService';\nimport '../styles/AssetPage.css';\n\nfunction ViewModeToggle({ viewMode, setViewMode }) {\n  const handleViewModeChange = e => {\n    localStorageService.assetViewMode = e.target.value;\n    setViewMode(e.target.value);\n  };\n\n  return (\n    <Col>\n      <InputGroup>\n        <FormLabel className='view-mode-toggle'>\n          <FormCheck\n            type='radio'\n            value='card'\n            checked={viewMode === 'card'}\n            onChange={handleViewModeChange}\n          />\n          Card View\n        </FormLabel>\n        <FormLabel className='view-mode-toggle'>\n          <FormCheck\n            type='radio'\n            value='spreadsheet'\n            checked={viewMode === 'spreadsheet'}\n            onChange={handleViewModeChange}\n          />\n          Spreadsheet View\n        </FormLabel>\n      </InputGroup>\n    </Col>\n  );\n}\n\nfunction HomePage() {\n  const [viewMode, setViewMode] = useState(localStorageService.assetViewMode);\n\n  return (\n    <div>\n      <Container>\n        <br></br>\n        <Row>\n          <Col>\n            <h1>Your Assets:</h1>\n          </Col>\n          <Col>\n            <Button variant='success btn-lg float-right' as={Link} to='/add_asset'>\n              New\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <ViewModeToggle viewMode={viewMode} setViewMode={setViewMode} />\n        </Row>\n        <AssetList viewMode={viewMode} />\n      </Container>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport Image from 'react-bootstrap/Image'\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { FaEnvelope, FaGithub, FaPhone } from 'react-icons/fa';\n\nfunction CompanyPage() {\n    return (\n        <div className=\"container\">\n            <br></br>\n            <h1>ATP - Asset Tracking & Protection</h1>\n            <br></br>\n            <Carousel>\n                <Carousel.Item>\n                    <img\n                    className=\"d-block w-100\"\n                    src=\"https://www.bunchandbrocklaw.com/wp-content/uploads/2018/12/chapter-7-exemptions-1072x425.jpg\"\n                    alt=\"First slide\"\n                    />\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img\n                    className=\"d-block w-100\"\n                    src=\"https://oregonshar.files.wordpress.com/2014/04/1404-mustangs_088-line-of-pony-cars.jpg?w=848\"\n                    alt=\"Second slide\"\n                    />\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img\n                    className=\"d-block w-100\"\n                    src=\"https://images.macrumors.com/t/0dAUvf2F-YHP97tMDCDAnEwMSok=/800x0/article-new/2018/12/appleproductlineup-800x313.jpg\"\n                    alt=\"Third slide\"\n                    />\n                </Carousel.Item>\n            </Carousel>\n            <br></br>\n            <h3>About ATP</h3>\n            <br></br>\n            <p>We should come up with a paragraph here about the company's history and what our slogan is or something like that.</p>\n            <br></br>\n            <h3>ATP Team</h3>\n            <Row>\n                <Col xs={6} md={4}>\n                <Image src=\"https://static.independent.co.uk/s3fs-public/thumbnails/image/2015/06/06/15/Chris-Pratt.jpg?w968h681\" thumbnail />\n                <h4>Tyler Green</h4>\n                <br></br>\n                <p>about Tyler</p>\n                </Col>\n                <Col xs={6} md={4}>\n                <Image src=\"https://s.hdnux.com/photos/51/23/24/10827008/3/920x920.jpg\" thumbnail />\n                <h4>Ethan Watson</h4>\n                <br></br>\n                <p>about Ethan</p>\n                </Col>\n                <Col xs={6} md={4} className=\"shadow-lg\">\n                    <Image style={{ marginTop: 12 }} src=\"https://www.tubefilter.com/wp-content/uploads/2019/11/dobrik-people.jpg\" thumbnail />\n                    <h3 className=\"text-center\">Jason Boyd</h3>\n                    <div className=\"p-3\">\n                        <Row>\n                            <Col className=\"text-right\"><FaEnvelope size={32} /></Col>\n                            <Col xs={8} className=\"text-left\"><p className=\"lead\"><a href=\"mailto:jasonboyd99@gmail.com?\">Email Jason</a></p></Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"text-right\"><FaGithub size={32} /></Col>\n                            <Col xs={8} className=\"text-left\"><p className=\"lead\"><a target=\"_blank\" href=\"https://github.com/itsjaboyd\">Jason's Github</a></p></Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"text-right\"><FaPhone size={32} /></Col>\n                            <Col xs={8} className=\"text-left\"><p className=\"lead\">801 - 529 - 0853</p></Col>\n                        </Row>\n                    </div>\n                    <h4 className=\"p-2\">About Jason</h4>\n                    <hr />\n                    <p>\n                        Jason is currently a senior studying computer science at Utah State Univeristy in Logan, Utah. His interests include mobile application development,\n                        producing music, and exploring the outdoors.\n                    </p>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default CompanyPage;","import React, { useState } from 'react';\n\nfunction ContactForm() {\n\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        message: '',\n    });\n\n    function handleSubmit(e) {\n        var payload = { formData }.formData.name + \"\\n\" +\n            { formData }.formData.email + \"\\n\" +\n            { formData }.formData.message;\n        alert(\"STATE DATA:\\n\" + payload);\n    };\n\n    return (\n        <form id=\"contact-form\" onSubmit={handleSubmit} method=\"POST\">\n            <div className=\"form-group\">\n                <label htmlFor=\"name\">Name</label>\n                <input type=\"text\" className=\"form-control\" value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                <input type=\"email\" className=\"form-control\" value={formData.email} onChange={(e) => setFormData({ ...formData, email: e.target.value })} />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"message\">Message</label>\n                <textarea className=\"form-control\" rows=\"5\" value={formData.message} onChange={(e) => setFormData({ ...formData, message: e.target.value })} />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n        </form>\n    );\n}\n\nexport default ContactForm;","import React, { useState } from 'react';\nimport { Container, Row, Col, Image } from 'react-bootstrap';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport ContactForm from '../components/common/ContactForm';\nimport { FaEnvelope, FaGithub, FaPhone } from 'react-icons/fa';\n\nfunction ContactPage() {\n    const contactStyling = {\n        heading: {\n            color: \"white\",\n            backgroundColor: \"black\",\n        },\n        personalImage: {\n            margin: 24,\n        },\n    };\n\n    const Map = withScriptjs(withGoogleMap(props =>\n        <GoogleMap\n            defaultZoom={10}\n            defaultCenter={{ lat: 41.7355556, lng: -111.8336111 }}\n        >\n            <Marker position={{ lat: 41.7355556, lng: -111.8336111 }}/>\n        </GoogleMap>\n    ));\n\n    return (\n        <div>\n            <Container>\n                <div className=\"jumbotron text-center\">\n                    <h1 className=\"display-2\">Contact ATP!</h1>\n                    <div style={contactStyling.description}>\n                        <p className=\"lead\">\n                                Although we may not be a fully fledged service yet, we value your feedback and any questions you may have!\n                        </p>\n                    </div>\n                </div>\n                <Row>\n                    <Col className=\"px-5\">\n                        <ContactForm />\n                    </Col>\n                    <Col className=\"text-center\">\n                        <h2>Our Location</h2>\n                        <p>\n                            We are currently based in Logan, Utah.\n                        </p>\n                        <div className=\"shadow\">\n                            <Map\n                                googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBOBXN_Ul3kEatVYTHOUzf_-Zr1WBBNljA&libraries=geometry,drawing,places\"\n                                loadingElement={<div style={{ height: `100%` }} />}\n                                containerElement={<div style={{ height: `320px` }} />}\n                                mapElement={<div style={{ height: `100%` }} />}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n                <hr className=\"my-5\" />\n            </Container>\n        </div>\n    );\n}\n\n\nexport default ContactPage;","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/LoginPage.css';\nimport { Row, Col } from 'react-bootstrap';\nimport authService from '../services/authService';\nimport LoadingSpinner from '../components/LoadingSpinner';\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nfunction LoginForm({ setPage }) {\n  const { register, handleSubmit } = useForm();\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n  const submitData = async data => {\n    setIsLoading(true);\n    const success = await authService.login(data.email, data.password);\n    if (success) {\n      // redirect to asset page on successful login\n      history.push('/assets');\n    } else {\n      alert('login error');\n    }\n    setIsLoading(false);\n  };\n  return (\n    <LoadingSpinner isLoading={isLoading}>\n      <div className='login-page'>\n        <div className='text-center'>\n          <h1 className='display-2'>ATP</h1>\n          <h4>Please login</h4>\n        </div>\n        <form className='login-form' onSubmit={handleSubmit(submitData)}>\n          <div className='form-group'>\n            <label htmlFor='email'>Email</label>\n            <input\n              className='form-control form-control-lg'\n              name='email'\n              placeholder='example@email.com'\n              type='email'\n              ref={register({ required: true })}\n            />\n\n            <label htmlFor='password'>Password</label>\n            <input\n              className='form-control form-control-lg'\n              name='password'\n              placeholder='password'\n              type='password'\n              ref={register({ required: true })}\n            />\n          </div>\n          <div className='form-group text-center'>\n            <input type='checkbox' name='remember' ref={register} />\n            <label className='mx-2' htmlFor='remember'>\n              Remember Me\n            </label>\n          </div>\n          <div>\n            <Row>\n              <Col>\n                <button className='btn btn-outline-primary btn-block' type='submit'>\n                  Login\n                </button>\n              </Col>\n              <Col>\n                <button\n                  className='btn btn-outline-success btn-block'\n                  type='submit'\n                  onClick={() => {\n                    setPage(false);\n                  }}\n                >\n                  Register\n                </button>\n              </Col>\n            </Row>\n          </div>\n        </form>\n      </div>\n    </LoadingSpinner>\n  );\n}\n\nfunction RegisterForm() {\n  const { register, handleSubmit, clearError, setError, errors } = useForm();\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n  const submitData = async data => {\n    setIsLoading(true);\n    let success = await authService.register(\n      data.email,\n      data.password,\n      data.firstName,\n      data.lastName,\n      data.phone\n    );\n    if (success) {\n      success = await authService.login(data.email, data.password);\n      if (success) {\n        history.push('/assets');\n      } else {\n        alert('login error');\n      }\n    } else {\n      alert('register error');\n    }\n    setIsLoading(false);\n  };\n  return (\n    <LoadingSpinner isLoading={isLoading}>\n      <div className='login-page'>\n        <div className='text-center'>\n          <h1 className='display-2'>ATP</h1>\n          <h4>Registration</h4>\n        </div>\n        <div>\n          <form className='register-form' onSubmit={handleSubmit(submitData)}>\n            <div className='form-group'>\n              <Row>\n                <Col>\n                  <label htmlFor='firstName'>First Name</label>\n                  <input\n                    className='form-control'\n                    type='text'\n                    placeholder='First Name'\n                    name='firstName'\n                    ref={register({ required: true })}\n                  />\n                </Col>\n                <Col>\n                  <label htmlFor='lastName'>Last Name</label>\n                  <input\n                    className='form-control'\n                    type='text'\n                    placeholder='Last Name'\n                    name='lastName'\n                    ref={register({ required: true })}\n                  />\n                </Col>\n              </Row>\n              <label htmlFor='email'>Email Address</label>\n              <input\n                className='form-control'\n                type='email'\n                placeholder='example@email.com'\n                name='email'\n                ref={register({ required: true })}\n              />\n              <label htmlFor='phone'>Phone Number</label>\n              <input\n                className='form-control'\n                type='tel'\n                placeholder='123-456-7890'\n                name='phone'\n                pattern='[0-9]{3}-[0-9]{3}-[0-9]{4}'\n                ref={register}\n              />\n              <Row>\n                <Col>\n                  <label htmlFor='password'>New Password</label>\n                  <input\n                    className='form-control'\n                    type='password'\n                    placeholder='Password'\n                    name='password'\n                    ref={register({\n                      required: true,\n                      validate: {\n                        correct: value =>\n                          /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/.test(\n                            value\n                          ) === true\n                      }\n                    })}\n                    onChange={async e => {\n                      const value = e.target.value;\n                      await sleep(1000);\n                      if (\n                        /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/.test(value)\n                      ) {\n                        clearError('Password');\n                      } else {\n                        setError(\n                          'Password',\n                          'notMatch',\n                          'Password must be 8 characters long, contain one digit, upper, lower and special case character.'\n                        );\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <div className='text-center'>\n                {errors.Password && <p className='error-message'>{errors.Password.message}</p>}\n              </div>\n              <button className='btn btn-outline-success btn-block my-4' type='submit'>\n                Register\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </LoadingSpinner>\n  );\n}\n\nfunction LoginPage() {\n  const [page, setPage] = useState(true);\n\n  if (page) {\n    return <LoginForm setPage={setPage} />;\n  } else {\n    return <RegisterForm />;\n  }\n}\n\nexport default LoginPage;\n","import React, { useState } from 'react';\nimport { Container, Image, Row, Col } from 'react-bootstrap';\nimport icon from '../assets/images/profile_icon.jpg';\nimport authService from '../services/authService';\nimport useAuth from '../hooks/useAuth';\nimport assetService from '../services/assetService';\nimport '../styles/Profile.css';\n\nfunction Profile() {\n    const [user, setUser] = useState([]);\n    const [assets, setAssets] = useState([]);\n    const [totalvalue, setTotalvalue] = useState([]);\n\n    useAuth(() => {\n      const retreiveAssets = async () => {\n        const data = await assetService.getAllAssets();\n        var totalprice = 0;\n        data.forEach(element => {\n            totalprice += element.value;\n        });\n        setTotalvalue(totalprice);\n        setAssets(data);\n        const retreiveUser = async () => {\n          const data = await authService.userDetails();\n          setUser(data);\n        };\n        retreiveUser();\n      };\n      retreiveAssets();\n      const retreiveUser = async () => {\n        const data = await authService.userDetails();\n        setUser(data);\n      };\n      retreiveUser();\n    });\n\n    return (\n        <Container>\n          <br></br>\n          <h1 className=\"text-center\">My Profile</h1>\n          <Row>\n          <div class=\"col-xs-12 col-sm-6 col-md-6\">\n            <div class=\"well well-sm\">\n              <br></br>\n              <br></br>\n              <br></br>\n              <br></br>\n                <Row>\n                    <Col>\n                        {/* We could add ability to edit this picture as well */}\n                      <Image src={icon} width=\"200\" height=\"auto\" roundedCircle></Image>\n                    </Col>\n                    <Col>\n                        <h4>{user.firstName} {user.lastName}</h4>\n                        {/* We can add location if we want and put it here */}\n                        <small><cite title=\"San Francisco, USA\">San Francisco, USA <i class=\"glyphicon glyphicon-map-marker\">\n                        </i></cite></small>\n                        <p>\n                            <i class=\"glyphicon glyphicon-envelope\"></i>{user.email}\n                            <br />\n                            <i class=\"glyphicon glyphicon-gift\"></i>{user.phone}\n                            <br />\n                            <br />\n                            <i class=\"glyphicon glyphicon-gift\"></i>Assets value: ${totalvalue}\n                            <br />\n                            <i class=\"glyphicon glyphicon-gift\"></i># of assets: {assets.length}</p>\n\n                            {/* We could add links to other pages they have here if we want\n                                or even make this an edit button if we want, just don't know if we need that yet */}\n                        <div class=\"btn-group\">\n                            <button type=\"button\" class=\"btn btn-primary\">\n                                Social</button>\n                            <button type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-toggle=\"dropdown\">\n                                <span class=\"caret\"></span><span class=\"sr-only\">Social</span>\n                            </button>\n                            <ul class=\"dropdown-menu\" role=\"menu\">\n                                <li><a href=\"#\">Twitter</a></li>\n                                <li><a href=\"https://plus.google.com/+Jquery2dotnet/posts\">Google +</a></li>\n                                <li><a href=\"https://www.facebook.com/jquery2dotnet\">Facebook</a></li>\n                                <li class=\"divider\"></li>\n                                <li><a href=\"#\">Github</a></li>\n                            </ul>\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        </div>\n          </Row>\n        </Container>\n    );\n}\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport { Container, Button, InputGroup } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport useAuth from '../hooks/useAuth';\nimport assetService from '../services/assetService';\n\nfunction AddAsset() {\n  const history = useHistory();\n  const { handleSubmit, register } = useForm();\n  const [isLoading, setIsLoading] = useState(false);\n  const [imageFileName, setImageFileName] = useState(null);\n\n  useAuth(() => {});\n\n  const onSubmit = async data => {\n    setIsLoading(true);\n    console.log(data.image);\n    const success = await assetService.createAsset(\n      data.name,\n      data.value,\n      data.description,\n      data.image[0]\n    );\n    if (success) {\n      history.push('/assets');\n    } else {\n      console.error('Error creating asset');\n    }\n    setImageFileName(null);\n    setIsLoading(false);\n  };\n\n  return (\n    <LoadingSpinner isLoading={isLoading}>\n      <Container>\n        <br></br>\n        <h1>Add Asset</h1>\n        <br></br>\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <Form.Group controlId='formGroupName'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type='name'\n              name='name'\n              placeholder='Enter name'\n              ref={register({ required: true })}\n            />\n          </Form.Group>\n          <Form.Group controlId='formGroupPrice'>\n            <Form.Label>Price</Form.Label>\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text id='inputGroupPrepend'>$</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                type='number'\n                step='any'\n                name='value'\n                placeholder='Enter price'\n                ref={register({ required: true })}\n              />\n            </InputGroup>\n          </Form.Group>\n          <Form.Group controlId='formGroupDescription'>\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              type='description'\n              placeholder='Enter description'\n              name='description'\n              ref={register}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Image (optional)</Form.Label>\n            <Form.File\n              id='custom-file'\n              label={imageFileName ? imageFileName : 'File upload'}\n              name='image'\n              accept='image/png, image/jpeg'\n              ref={register}\n              custom\n              onChange={e => setImageFileName(e.target.files[0].name)}\n            />\n          </Form.Group>\n          <Button variant='success' type='submit'>\n            Create\n          </Button>\n        </Form>\n      </Container>\n    </LoadingSpinner>\n  );\n}\n\nexport default AddAsset;\n","import React from 'react';\nimport Header from './components/Header';\nimport HomePage from './pages/HomePage';\nimport CompanyPage from './pages/CompanyPage';\nimport ContactPage from './pages/ContactPage';\nimport LoginPage from './pages/LoginPage';\nimport Profile from './pages/Profile';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport AddAsset from './pages/AddAsset';\n\nfunction App() {\n  return (\n    <div>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Header />\n        <Switch>\n          <Route path='/assets'>\n            <Assets />\n          </Route>\n          <Route path='/add_asset'>\n            <AddAsset />\n          </Route>\n          <Route path='/page1'>\n            <Page1 />\n          </Route>\n          <Route path='/page2'>\n            <Page2 />\n          </Route>\n          <Route path='/page3'>\n            <Page3 />\n          </Route>\n          <Route path='/contact'>\n            <Contact />\n          </Route>\n          <Route path='/login'>\n            <LoginPage />\n          </Route>\n          <Route path='/profile'>\n            <Profile />\n          </Route>\n          <Route path='/'>\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nfunction Home() {\n  return <CompanyPage />;\n}\n\nfunction Assets() {\n  return <HomePage />;\n}\n\nfunction Page1() {\n  return <h2>Page1</h2>;\n}\n\nfunction Page2() {\n  return <h2>Page2</h2>;\n}\n\nfunction Page3() {\n  return <h2>Page3</h2>;\n}\n\nfunction Contact() {\n  return <ContactPage />;\n}\n\nfunction Login() {\n  return <LoginPage />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}