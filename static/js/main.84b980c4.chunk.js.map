{"version":3,"sources":["components/Header.js","components/AssetCard/AssetCard.js","services/atpApi.js","services/authService/routes.js","services/localStorageService.js","services/authService/index.js","hooks/useAuth.js","services/assetService/routes.js","services/assetService/index.js","components/AssetList/AssetList.js","pages/HomePage.js","pages/CompanyPage.js","components/common/ContactForm.js","pages/ContactPage.js","pages/LoginPage.js","pages/AddAsset.js","App.js","serviceWorker.js","index.js"],"names":["Header","Navbar","bg","variant","expand","className","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","Item","Form","inline","FormControl","type","placeholder","Button","AssetCard","asset","Col","md","lg","Card","Title","name","value","Text","description","atpApi","process","authRoutes","this","baseRoute","localStorageService","baseKey","key","data","localStorage","setItem","JSON","stringify","parse","getItem","load","save","authService","email","password","firstName","lastName","phone","axios","post","register","console","error","login","res","accessToken","token","refreshToken","refresh","tryRefresh","get","isLoggedIn","headers","Authorization","userDetails","authorizationHeader","useAuth","callback","redirectRoute","history","useHistory","useEffect","a","push","checkLogin","assetRoutes","assetId","assetService","authHeaders","assets","singleAsset","patch","delete","AssetList","useState","setAssets","getAllAssets","retreiveAssets","Row","map","item","HomePage","Container","CompanyPage","Carousel","src","alt","xs","Image","thumbnail","style","marginTop","size","href","target","ContactForm","message","formData","setFormData","onSubmit","e","payload","alert","method","htmlFor","onChange","rows","ContactPage","Map","withScriptjs","withGoogleMap","props","defaultZoom","defaultCenter","lat","lng","position","heading","color","backgroundColor","personalImage","margin","googleMapURL","loadingElement","height","containerElement","mapElement","sleep","ms","Promise","resolve","setTimeout","LoginForm","setPage","useForm","handleSubmit","unregister","clearError","setError","errors","submitData","ref","required","onClick","RegisterForm","pattern","validate","correct","test","Password","LoginPage","page","AddAsset","setLoggedIn","createAsset","Group","controlId","Label","Control","InputGroup","Prepend","step","File","label","custom","Home","Assets","Page1","Page2","Page3","Contact","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","catch"],"mappings":"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","file":"static/js/main.84b980c4.chunk.js","sourcesContent":["import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\nimport { Form, Button, FormControl, Nav, NavDropdown } from \"react-bootstrap\";\nimport {\n    Link\n  } from \"react-router-dom\";\n\nfunction Header() {\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n            <div className=\"container\">\n                <Navbar.Brand as={Link} to=\"/\">ATP</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n                        <Nav.Link as={Link} to=\"/assets\">Assets</Nav.Link>\n                        <NavDropdown className=\"mr-auto\" title=\"Pages\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item as={Link} to=\"/contact\">Contact</NavDropdown.Item>\n                            <NavDropdown.Item as={Link} to=\"/page2\">Page 2</NavDropdown.Item>\n                            <NavDropdown.Item as={Link} to=\"/page3\">Page 3</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                    <Form inline>\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                        <Button variant=\"outline-success\">Search</Button>\n                    </Form>\n                    <Button className=\"ml-2\" variant=\"outline-primary\" as={Link} to=\"/login\">Login</Button>\n                </Navbar.Collapse>\n            </div>\n        </Navbar>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport { Card, Button, Col } from 'react-bootstrap';\nimport '../../styles/AssetCard.css';\n\nfunction AssetCard({ asset }) {\n  return (\n    <Col md='6' lg='4' className='asset-card'>\n      <Card>\n        <Card.Title>{`${asset.name}: $${asset.value}`}</Card.Title>\n        <Card.Text>{asset.description}</Card.Text>\n        <Button>View Details</Button>\n      </Card>\n    </Col>\n  );\n}\n\nexport default AssetCard;\n","function atpApi() {\n  const protocol = process.env.REACT_APP_API_PROTOCOL || 'http';\n  const host = process.env.REACT_APP_API_HOST || 'localhost:8000';\n\n  return `${protocol}://${host}`;\n}\n\nexport default atpApi();\n","import atpApi from '../atpApi';\n\nclass AuthRoutes {\n  get baseRoute() {\n    return `${atpApi}/auth`;\n  }\n\n  register() {\n    return `${this.baseRoute}/register`;\n  }\n\n  login() {\n    return `${this.baseRoute}/login`;\n  }\n\n  refresh() {\n    return `${this.baseRoute}/refresh`;\n  }\n\n  isLoggedIn() {\n    return `${this.baseRoute}/isLoggedIn`;\n  }\n\n  userDetails() {\n    return `${this.baseRoute}/userDetails`;\n  }\n}\n\nconst authRoutes = new AuthRoutes();\nexport default authRoutes;\n","class LocalStorageService {\n  constructor() {\n    this.baseKey = 'ATP';\n  }\n\n  save(key, data) {\n    localStorage.setItem(`${this.baseKey}.${key}`, JSON.stringify(data));\n  }\n\n  load(key) {\n    return JSON.parse(localStorage.getItem(`${this.baseKey}.${key}`));\n  }\n\n  get accessToken() {\n    return this.load('accessToken');\n  }\n\n  set accessToken(data) {\n    this.save('accessToken', data);\n  }\n\n  get refreshToken() {\n    return this.load('refreshToken');\n  }\n\n  set refreshToken(data) {\n    this.save('refreshToken', data);\n  }\n}\n\nconst localStorageService = new LocalStorageService();\nexport default localStorageService;\n","import axios from 'axios';\nimport authRoutes from './routes';\nimport localStorageService from '../localStorageService';\n\nclass AuthService {\n  get accessToken() {\n    return localStorageService.accessToken;\n  }\n\n  get refreshToken() {\n    return localStorageService.refreshToken;\n  }\n\n  set accessToken(value) {\n    localStorageService.accessToken = value;\n  }\n\n  set refreshToken(value) {\n    localStorageService.refreshToken = value;\n  }\n\n  get authHeaders() {\n    return { Authorization: `Bearer ${this.accessToken}` };\n  }\n\n  async register(email, password, firstName, lastName, phone) {\n    try {\n      await axios.post(authRoutes.register(), {\n        email,\n        password,\n        firstName,\n        lastName,\n        phone\n      });\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n\n  async login(email, password) {\n    try {\n      const res = await axios.post(authRoutes.login(), {\n        email,\n        password\n      });\n      this.accessToken = res.data.token;\n      this.refreshToken = res.data.refresh;\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n\n  async refresh() {\n    try {\n      const res = await axios.post(authRoutes.refresh(), {\n        refresh: this.refreshToken\n      });\n      this.accessToken = res.data.token;\n      this.refreshToken = res.data.refresh;\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n\n  async isLoggedIn(tryRefresh = true) {\n    try {\n      await axios.get(authRoutes.isLoggedIn(), {\n        headers: {\n          Authorization: `Bearer ${this.accessToken}`\n        }\n      });\n      return true;\n    } catch (error) {\n      if (tryRefresh) {\n        const refreshSucceded = await this.refresh();\n        if (refreshSucceded) {\n          return await this.isLoggedIn(false);\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    }\n  }\n\n  async userDetails() {\n    try {\n      const res = await axios.get(authRoutes.userDetails(), {\n        headers: this.authorizationHeader\n      });\n      return {\n        email: res.data.email,\n        firstName: res.data.firstName,\n        lastName: res.data.lastName,\n        phone: res.data.phone\n      };\n    } catch (error) {\n      return null;\n    }\n  }\n}\n\nconst authService = new AuthService();\nexport default authService;\n","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport authService from '../services/authService';\n\nfunction useAuth(callback, redirectRoute = '/') {\n  const history = useHistory();\n\n  useEffect(() => {\n    async function checkLogin() {\n      const isLoggedIn = await authService.isLoggedIn();\n      if (isLoggedIn) {\n        callback();\n      } else {\n        history.push(redirectRoute);\n      }\n    }\n\n    checkLogin();\n  }, []);\n}\n\nexport default useAuth;\n","import atpApi from '../atpApi';\n\nclass AssetRoutes {\n  get baseRoute() {\n    return `${atpApi}/asset`;\n  }\n\n  singleAsset(assetId) {\n    return `${this.baseRoute}/${assetId}`;\n  }\n}\n\nconst assetRoutes = new AssetRoutes();\nexport default assetRoutes;\n","import axios from 'axios';\nimport assetRoutes from './routes';\nimport authService from '../authService';\n\nclass AssetService {\n  async getAllAssets() {\n    try {\n      const res = await axios.get(assetRoutes.baseRoute, { headers: authService.authHeaders });\n      return res.data.assets;\n    } catch (error) {\n      console.error(error);\n      return null;\n    }\n  }\n\n  async getSingleAsset(id) {\n    try {\n      const res = await axios.get(assetRoutes.singleAsset(id), {\n        headers: authService.authHeaders\n      });\n      return res.data;\n    } catch (error) {\n      console.error(error);\n      return null;\n    }\n  }\n\n  async createAsset(name, value, description) {\n    try {\n      await axios.post(\n        assetRoutes.baseRoute,\n        {\n          name,\n          value,\n          description\n        },\n        {\n          headers: authService.authHeaders\n        }\n      );\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n\n  async updateAsset(id, name = null, value = null, description = null) {\n    try {\n      await axios.patch(\n        assetRoutes.singleAsset(id),\n        {\n          name,\n          value,\n          description\n        },\n        {\n          headers: authService.authHeaders\n        }\n      );\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n\n  async deleteAsset(id) {\n    try {\n      await axios.delete(assetRoutes.singleAsset(id), { headers: authService.authHeaders });\n      return true;\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n}\n\nconst assetService = new AssetService();\nexport default assetService;\n","import React, { useState } from 'react';\nimport AssetCard from '../AssetCard';\nimport { Row } from 'react-bootstrap';\nimport useAuth from '../../hooks/useAuth';\nimport assetService from '../../services/assetService';\n\nfunction AssetList() {\n  const [assets, setAssets] = useState([]);\n\n  useAuth(() => {\n    const retreiveAssets = async () => {\n      const data = await assetService.getAllAssets();\n      setAssets(data);\n    };\n    retreiveAssets();\n  });\n\n  return (\n    <Row>\n      {assets.map(item => {\n        return <AssetCard key={item.id} asset={item} />;\n      })}\n    </Row>\n  );\n}\n\nexport default AssetList;\n","import React from 'react';\nimport AssetList from '../components/AssetList';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\n\nfunction HomePage() {\n    return (\n        <div>\n            <Container>\n                <br></br>\n                <Row>\n                    <Col><h1>Your Assets:</h1></Col>\n                    <Col><Button variant=\"success btn-lg float-right\" as={Link} to=\"/add_asset\">New</Button></Col>\n                </Row>\n                <AssetList />\n            </Container>\n        </div>\n    );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport Image from 'react-bootstrap/Image'\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { FaEnvelope, FaGithub, FaPhone } from 'react-icons/fa';\n\nfunction CompanyPage() {\n    return (\n        <div className=\"container\">\n            <br></br>\n            <h1>ATP - Asset Tracking & Protection</h1>\n            <br></br>\n            <Carousel>\n                <Carousel.Item>\n                    <img\n                    className=\"d-block w-100\"\n                    src=\"https://www.bunchandbrocklaw.com/wp-content/uploads/2018/12/chapter-7-exemptions-1072x425.jpg\"\n                    alt=\"First slide\"\n                    />\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img\n                    className=\"d-block w-100\"\n                    src=\"https://oregonshar.files.wordpress.com/2014/04/1404-mustangs_088-line-of-pony-cars.jpg?w=848\"\n                    alt=\"Second slide\"\n                    />\n                </Carousel.Item>\n                <Carousel.Item>\n                    <img\n                    className=\"d-block w-100\"\n                    src=\"https://images.macrumors.com/t/0dAUvf2F-YHP97tMDCDAnEwMSok=/800x0/article-new/2018/12/appleproductlineup-800x313.jpg\"\n                    alt=\"Third slide\"\n                    />\n                </Carousel.Item>\n            </Carousel>\n            <br></br>\n            <h3>About ATP</h3>\n            <br></br>\n            <p>We should come up with a paragraph here about the company's history and what our slogan is or something like that.</p>\n            <br></br>\n            <h3>ATP Team</h3>\n            <Row>\n                <Col xs={6} md={4}>\n                <Image src=\"https://static.independent.co.uk/s3fs-public/thumbnails/image/2015/06/06/15/Chris-Pratt.jpg?w968h681\" thumbnail />\n                <h4>Tyler Green</h4>\n                <br></br>\n                <p>about Tyler</p>\n                </Col>\n                <Col xs={6} md={4}>\n                <Image src=\"https://s.hdnux.com/photos/51/23/24/10827008/3/920x920.jpg\" thumbnail />\n                <h4>Ethan Watson</h4>\n                <br></br>\n                <p>about Ethan</p>\n                </Col>\n                <Col xs={6} md={4} className=\"shadow-lg\">\n                    <Image style={{ marginTop: 12 }} src=\"https://www.tubefilter.com/wp-content/uploads/2019/11/dobrik-people.jpg\" thumbnail />\n                    <h3 className=\"text-center\">Jason Boyd</h3>\n                    <div className=\"p-3\">\n                        <Row>\n                            <Col className=\"text-right\"><FaEnvelope size={32} /></Col>\n                            <Col xs={8} className=\"text-left\"><p className=\"lead\"><a href=\"mailto:jasonboyd99@gmail.com?\">Email Jason</a></p></Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"text-right\"><FaGithub size={32} /></Col>\n                            <Col xs={8} className=\"text-left\"><p className=\"lead\"><a target=\"_blank\" href=\"https://github.com/itsjaboyd\">Jason's Github</a></p></Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"text-right\"><FaPhone size={32} /></Col>\n                            <Col xs={8} className=\"text-left\"><p className=\"lead\">801 - 529 - 0853</p></Col>\n                        </Row>\n                    </div>\n                    <h4 className=\"p-2\">About Jason</h4>\n                    <hr />\n                    <p>\n                        Jason is currently a senior studying computer science at Utah State Univeristy in Logan, Utah. His interests include mobile application development,\n                        producing music, and exploring the outdoors.\n                    </p>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default CompanyPage;","import React, { useState } from 'react';\n\nfunction ContactForm() {\n\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        message: '',\n    });\n\n    function handleSubmit(e) {\n        var payload = { formData }.formData.name + \"\\n\" +\n            { formData }.formData.email + \"\\n\" +\n            { formData }.formData.message;\n        alert(\"STATE DATA:\\n\" + payload);\n    };\n\n    return (\n        <form id=\"contact-form\" onSubmit={handleSubmit} method=\"POST\">\n            <div className=\"form-group\">\n                <label htmlFor=\"name\">Name</label>\n                <input type=\"text\" className=\"form-control\" value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                <input type=\"email\" className=\"form-control\" value={formData.email} onChange={(e) => setFormData({ ...formData, email: e.target.value })} />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"message\">Message</label>\n                <textarea className=\"form-control\" rows=\"5\" value={formData.message} onChange={(e) => setFormData({ ...formData, message: e.target.value })} />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n        </form>\n    );\n}\n\nexport default ContactForm;","import React, { useState } from 'react';\nimport { Container, Row, Col, Image } from 'react-bootstrap';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport ContactForm from '../components/common/ContactForm';\nimport { FaEnvelope, FaGithub, FaPhone } from 'react-icons/fa';\n\nfunction ContactPage() {\n    const contactStyling = {\n        heading: {\n            color: \"white\",\n            backgroundColor: \"black\",\n        },\n        personalImage: {\n            margin: 24,\n        },\n    };\n\n    const Map = withScriptjs(withGoogleMap(props =>\n        <GoogleMap\n            defaultZoom={10}\n            defaultCenter={{ lat: 41.7355556, lng: -111.8336111 }}\n        >\n            <Marker position={{ lat: 41.7355556, lng: -111.8336111 }}/>\n        </GoogleMap>\n    ));\n\n    return (\n        <div>\n            <Container>\n                <div className=\"jumbotron text-center\">\n                    <h1 className=\"display-2\">Contact ATP!</h1>\n                    <div style={contactStyling.description}>\n                        <p className=\"lead\">\n                                Although we may not be a fully fledged service yet, we value your feedback and any questions you may have!\n                        </p>\n                    </div>\n                </div>\n                <Row>\n                    <Col className=\"px-5\">\n                        <ContactForm />\n                    </Col>\n                    <Col className=\"text-center\">\n                        <h2>Our Location</h2>\n                        <p>\n                            We are currently based in Logan, Utah.\n                        </p>\n                        <div className=\"shadow\">\n                            <Map\n                                googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBOBXN_Ul3kEatVYTHOUzf_-Zr1WBBNljA&libraries=geometry,drawing,places\"\n                                loadingElement={<div style={{ height: `100%` }} />}\n                                containerElement={<div style={{ height: `320px` }} />}\n                                mapElement={<div style={{ height: `100%` }} />}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n                <hr className=\"my-5\" />\n            </Container>\n        </div>\n    );\n}\n\n\nexport default ContactPage;","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/LoginPage.css';\nimport { Row, Col } from 'react-bootstrap';\nimport authService from '../services/authService';\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nfunction LoginForm({ setPage }) {\n  const { register, handleSubmit, unregister, clearError, setError, errors } = useForm();\n  const history = useHistory();\n  const submitData = async data => {\n    const success = await authService.login(data.email, data.password);\n    if (success) {\n      // redirect to asset page on successful login\n      history.push('/assets');\n    } else {\n      alert('login error');\n    }\n  };\n  return (\n    <div className='login-page'>\n      <div className='text-center'>\n        <h1 className='display-2'>ATP</h1>\n        <h4>Please login</h4>\n      </div>\n      <form className='login-form' onSubmit={handleSubmit(submitData)}>\n        <div className='form-group'>\n          <label htmlFor='email'>Email</label>\n          <input\n            className='form-control form-control-lg'\n            name='email'\n            placeholder='example@email.com'\n            type='email'\n            ref={register({ required: true })}\n          />\n\n          <label htmlFor='password'>Password</label>\n          <input\n            className='form-control form-control-lg'\n            name='password'\n            placeholder='password'\n            type='password'\n            ref={register({ required: true })}\n          />\n        </div>\n        <div className='form-group text-center'>\n          <input type='checkbox' name='remember' ref={register} />\n          <label className='mx-2' htmlFor='remember'>\n            Remember Me\n          </label>\n        </div>\n        <div>\n          <Row>\n            <Col>\n              <button className='btn btn-outline-primary btn-block' type='submit'>\n                Login\n              </button>\n            </Col>\n            <Col>\n              <button\n                className='btn btn-outline-success btn-block'\n                type='submit'\n                onClick={() => {\n                  setPage(false);\n                }}\n              >\n                Register\n              </button>\n            </Col>\n          </Row>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nfunction RegisterForm() {\n  const { register, handleSubmit, unregister, clearError, setError, errors } = useForm();\n  const history = useHistory();\n  const submitData = async data => {\n    let success = await authService.register(\n      data.email,\n      data.password,\n      data.firstName,\n      data.lastName,\n      data.phone\n    );\n    if (success) {\n      success = await authService.login(data.email, data.password);\n      if (success) {\n        history.push('/assets');\n      } else {\n        alert('login error');\n      }\n    } else {\n      alert('register error');\n    }\n  };\n  return (\n    <div className='login-page'>\n      <div className='text-center'>\n        <h1 className='display-2'>ATP</h1>\n        <h4>Registration</h4>\n      </div>\n      <div>\n        <form className='register-form' onSubmit={handleSubmit(submitData)}>\n          <div className='form-group'>\n            <Row>\n              <Col>\n                <label htmlFor='firstName'>First Name</label>\n                <input\n                  className='form-control'\n                  type='text'\n                  placeholder='First Name'\n                  name='firstName'\n                  ref={register({ required: true })}\n                />\n              </Col>\n              <Col>\n                <label htmlFor='lastName'>Last Name</label>\n                <input\n                  className='form-control'\n                  type='text'\n                  placeholder='Last Name'\n                  name='lastName'\n                  ref={register({ required: true })}\n                />\n              </Col>\n            </Row>\n            <label htmlFor='email'>Email Address</label>\n            <input\n              className='form-control'\n              type='email'\n              placeholder='example@email.com'\n              name='email'\n              ref={register({ required: true })}\n            />\n            <label htmlFor='phone'>Phone Number</label>\n            <input\n              className='form-control'\n              type='tel'\n              placeholder='123-456-7890'\n              name='phone'\n              pattern='[0-9]{3}-[0-9]{3}-[0-9]{4}'\n              ref={register}\n            />\n            <Row>\n              <Col>\n                <label htmlFor='password'>New Password</label>\n                <input\n                  className='form-control'\n                  type='password'\n                  placeholder='Password'\n                  name='password'\n                  ref={register({\n                    required: true,\n                    validate: {\n                      correct: value =>\n                        /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/.test(\n                          value\n                        ) === true\n                    }\n                  })}\n                  onChange={async e => {\n                    const value = e.target.value;\n                    await sleep(1000);\n                    if (\n                      /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/.test(value)\n                    ) {\n                      clearError('Password');\n                    } else {\n                      setError(\n                        'Password',\n                        'notMatch',\n                        'Password must be 8 characters long, contain one digit, upper, lower and special case character.'\n                      );\n                    }\n                  }}\n                />\n              </Col>\n            </Row>\n            <div className='text-center'>\n              {errors.Password && <p className='error-message'>{errors.Password.message}</p>}\n            </div>\n            <button className='btn btn-outline-success btn-block my-4' type='submit'>\n              Register\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nfunction LoginPage() {\n  const [page, setPage] = useState(true);\n\n  if (page) {\n    return <LoginForm setPage={setPage} />;\n  } else {\n    return <RegisterForm />;\n  }\n}\n\nexport default LoginPage;\n","import React, { useState } from 'react';\nimport { Container, Button, InputGroup } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport useAuth from '../hooks/useAuth';\nimport assetService from '../services/assetService';\n\nfunction AddAsset() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const history = useHistory();\n  const { handleSubmit, register, errors } = useForm();\n\n  useAuth(() => {\n    setLoggedIn(true);\n  });\n\n  const onSubmit = async data => {\n    const success = await assetService.createAsset(data.name, data.value, data.description);\n    if (success) {\n      history.push('/assets');\n    } else {\n      console.error('Error creating asset');\n    }\n  };\n\n  return (\n    <Container>\n      <br></br>\n      <h1>Add Asset</h1>\n      <br></br>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Form.Group controlId='formGroupName'>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='name'\n            name='name'\n            placeholder='Enter name'\n            ref={register({ required: true })}\n          />\n        </Form.Group>\n        <Form.Group controlId='formGroupPrice'>\n          <Form.Label>Price</Form.Label>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text id='inputGroupPrepend'>$</InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control\n              type='number'\n              step='any'\n              name='value'\n              placeholder='Enter price'\n              ref={register({ required: true })}\n            />\n          </InputGroup>\n        </Form.Group>\n        <Form.Group controlId='formGroupDescription'>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            type='description'\n            placeholder='Enter description'\n            name='description'\n            ref={register}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Picture</Form.Label>\n          <Form.File\n            id='custom-file'\n            label='Custom file input'\n            name='picture'\n            ref={register}\n            custom\n          />\n        </Form.Group>\n        <Button variant='success' type='submit'>\n          Create\n        </Button>\n      </Form>\n    </Container>\n  );\n}\n\nexport default AddAsset;\n","import React from 'react';\nimport Header from './components/Header';\nimport HomePage from './pages/HomePage';\nimport CompanyPage from './pages/CompanyPage';\nimport ContactPage from './pages/ContactPage';\nimport LoginPage from './pages/LoginPage';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport AddAsset from './pages/AddAsset';\n\nfunction App() {\n  return ( \n    <div>\n      <Router>\n        <Header />\n        <Switch>\n            <Route path=\"/assets\">\n              <Assets />\n            </Route>\n            <Route path=\"/add_asset\">\n              <AddAsset/>\n            </Route>\n            <Route path=\"/page1\">\n              <Page1 />\n            </Route>\n            <Route path=\"/page2\">\n              <Page2 />\n            </Route>\n            <Route path=\"/page3\">\n              <Page3 />\n            </Route>\n            <Route path=\"/contact\">\n                <Contact />\n            </Route>\n            <Route path=\"/login\">\n                <LoginPage />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n    </div>\n  );\n}\n\nfunction Home() {\n  return <CompanyPage />;\n}\n\nfunction Assets() {\n  return <HomePage />;\n}\n\nfunction Page1() {\n  return <h2>Page1</h2>;\n}\n\nfunction Page2() {\n  return <h2>Page2</h2>;\n}\n\nfunction Page3() {\n  return <h2>Page3</h2>;\n}\n\nfunction Contact() {\n    return <ContactPage />;\n}\n\nfunction Login() {\n    return <LoginPage />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}